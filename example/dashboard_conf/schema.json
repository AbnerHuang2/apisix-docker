{
    "main": {
        "consumer": {
            "required": [
                "username"
            ],
            "type": "object",
            "properties": {
                "create_time": {
                    "type": "integer"
                },
                "desc": {
                    "maxLength": 256,
                    "type": "string"
                },
                "group_id": {
                    "anyOf": [
                        {
                            "maxLength": 64,
                            "type": "string",
                            "pattern": "^[a-zA-Z0-9-_.]+$",
                            "minLength": 1
                        },
                        {
                            "minimum": 1,
                            "type": "integer"
                        }
                    ]
                },
                "labels": {
                    "patternProperties": {
                        ".*": {
                            "maxLength": 64,
                            "type": "string",
                            "pattern": "^\\S+$",
                            "description": "value of label",
                            "minLength": 1
                        }
                    },
                    "type": "object",
                    "description": "key/value pairs to specify attributes"
                },
                "update_time": {
                    "type": "integer"
                },
                "plugins": {
                    "type": "object"
                },
                "username": {
                    "maxLength": 100,
                    "type": "string",
                    "pattern": "^[a-zA-Z0-9_]+$",
                    "minLength": 1
                }
            }
        },
        "route": {
            "type": "object",
            "anyOf": [
                {
                    "required": [
                        "plugins",
                        "uri"
                    ]
                },
                {
                    "required": [
                        "upstream",
                        "uri"
                    ]
                },
                {
                    "required": [
                        "upstream_id",
                        "uri"
                    ]
                },
                {
                    "required": [
                        "service_id",
                        "uri"
                    ]
                },
                {
                    "required": [
                        "plugins",
                        "uris"
                    ]
                },
                {
                    "required": [
                        "upstream",
                        "uris"
                    ]
                },
                {
                    "required": [
                        "upstream_id",
                        "uris"
                    ]
                },
                {
                    "required": [
                        "service_id",
                        "uris"
                    ]
                },
                {
                    "required": [
                        "script",
                        "uri"
                    ]
                },
                {
                    "required": [
                        "script",
                        "uris"
                    ]
                }
            ],
            "allOf": [
                {
                    "oneOf": [
                        {
                            "required": [
                                "uri"
                            ]
                        },
                        {
                            "required": [
                                "uris"
                            ]
                        }
                    ]
                },
                {
                    "oneOf": [
                        {
                            "not": {
                                "anyOf": [
                                    {
                                        "required": [
                                            "host"
                                        ]
                                    },
                                    {
                                        "required": [
                                            "hosts"
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "required": [
                                "host"
                            ]
                        },
                        {
                            "required": [
                                "hosts"
                            ]
                        }
                    ]
                },
                {
                    "oneOf": [
                        {
                            "not": {
                                "anyOf": [
                                    {
                                        "required": [
                                            "remote_addr"
                                        ]
                                    },
                                    {
                                        "required": [
                                            "remote_addrs"
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "required": [
                                "remote_addr"
                            ]
                        },
                        {
                            "required": [
                                "remote_addrs"
                            ]
                        }
                    ]
                }
            ],
            "not": {
                "anyOf": [
                    {
                        "required": [
                            "script",
                            "plugins"
                        ]
                    },
                    {
                        "required": [
                            "script",
                            "plugin_config_id"
                        ]
                    }
                ]
            },
            "properties": {
                "uri": {
                    "maxLength": 4096,
                    "type": "string",
                    "minLength": 1
                },
                "labels": {
                    "patternProperties": {
                        ".*": {
                            "maxLength": 64,
                            "type": "string",
                            "pattern": "^\\S+$",
                            "description": "value of label",
                            "minLength": 1
                        }
                    },
                    "type": "object",
                    "description": "key/value pairs to specify attributes"
                },
                "uris": {
                    "minItems": 1,
                    "type": "array",
                    "items": {
                        "type": "string",
                        "description": "HTTP uri"
                    },
                    "uniqueItems": true
                },
                "status": {
                    "enum": [
                        1,
                        0
                    ],
                    "type": "integer",
                    "default": 1,
                    "description": "route status, 1 to enable, 0 to disable"
                },
                "desc": {
                    "maxLength": 256,
                    "type": "string"
                },
                "id": {
                    "anyOf": [
                        {
                            "maxLength": 64,
                            "type": "string",
                            "pattern": "^[a-zA-Z0-9-_.]+$",
                            "minLength": 1
                        },
                        {
                            "minimum": 1,
                            "type": "integer"
                        }
                    ]
                },
                "enable_websocket": {
                    "type": "boolean",
                    "description": "enable websocket for request"
                },
                "update_time": {
                    "type": "integer"
                },
                "script": {
                    "maxLength": 102400,
                    "type": "string",
                    "minLength": 10
                },
                "name": {
                    "maxLength": 100,
                    "type": "string",
                    "minLength": 1
                },
                "create_time": {
                    "type": "integer"
                },
                "upstream_id": {
                    "anyOf": [
                        {
                            "maxLength": 64,
                            "type": "string",
                            "pattern": "^[a-zA-Z0-9-_.]+$",
                            "minLength": 1
                        },
                        {
                            "minimum": 1,
                            "type": "integer"
                        }
                    ]
                },
                "service_id": {
                    "anyOf": [
                        {
                            "maxLength": 64,
                            "type": "string",
                            "pattern": "^[a-zA-Z0-9-_.]+$",
                            "minLength": 1
                        },
                        {
                            "minimum": 1,
                            "type": "integer"
                        }
                    ]
                },
                "upstream": {
                    "type": "object",
                    "properties": {
                        "pass_host": {
                            "enum": [
                                "pass",
                                "node",
                                "rewrite"
                            ],
                            "type": "string",
                            "default": "pass",
                            "description": "mod of host passing"
                        },
                        "type": {
                            "type": "string",
                            "default": "roundrobin",
                            "description": "algorithms of load balancing"
                        },
                        "discovery_type": {
                            "type": "string",
                            "description": "discovery type"
                        },
                        "tls": {
                            "type": "object",
                            "properties": {
                                "client_cert_id": {
                                    "anyOf": [
                                        {
                                            "maxLength": 64,
                                            "type": "string",
                                            "pattern": "^[a-zA-Z0-9-_.]+$",
                                            "minLength": 1
                                        },
                                        {
                                            "minimum": 1,
                                            "type": "integer"
                                        }
                                    ]
                                },
                                "client_key": {
                                    "maxLength": 65536,
                                    "type": "string",
                                    "minLength": 128
                                },
                                "verify": {
                                    "description": "Turn on server certificate verification, currently only kafka upstream is supported",
                                    "default": false,
                                    "type": "boolean"
                                },
                                "client_cert": {
                                    "maxLength": 65536,
                                    "type": "string",
                                    "minLength": 128
                                }
                            },
                            "dependencies": {
                                "client_cert": {
                                    "required": [
                                        "client_key"
                                    ],
                                    "not": {
                                        "required": [
                                            "client_cert_id"
                                        ]
                                    }
                                },
                                "client_key": {
                                    "required": [
                                        "client_cert"
                                    ],
                                    "not": {
                                        "required": [
                                            "client_cert_id"
                                        ]
                                    }
                                },
                                "client_cert_id": {
                                    "not": {
                                        "required": [
                                            "client_client",
                                            "client_key"
                                        ]
                                    }
                                }
                            }
                        },
                        "labels": {
                            "patternProperties": {
                                ".*": {
                                    "maxLength": 64,
                                    "type": "string",
                                    "pattern": "^\\S+$",
                                    "description": "value of label",
                                    "minLength": 1
                                }
                            },
                            "type": "object",
                            "description": "key/value pairs to specify attributes"
                        },
                        "key": {
                            "type": "string",
                            "description": "the key of chash for dynamic load balancing"
                        },
                        "desc": {
                            "maxLength": 256,
                            "type": "string"
                        },
                        "update_time": {
                            "type": "integer"
                        },
                        "name": {
                            "maxLength": 100,
                            "type": "string",
                            "minLength": 1
                        },
                        "create_time": {
                            "type": "integer"
                        },
                        "retries": {
                            "minimum": 0,
                            "type": "integer"
                        },
                        "nodes": {
                            "anyOf": [
                                {
                                    "patternProperties": {
                                        ".*": {
                                            "type": "integer",
                                            "description": "weight of node",
                                            "minimum": 0
                                        }
                                    },
                                    "type": "object"
                                },
                                {
                                    "items": {
                                        "required": [
                                            "host",
                                            "port",
                                            "weight"
                                        ],
                                        "type": "object",
                                        "properties": {
                                            "port": {
                                                "type": "integer",
                                                "description": "port of node",
                                                "minimum": 1
                                            },
                                            "weight": {
                                                "type": "integer",
                                                "description": "weight of node",
                                                "minimum": 0
                                            },
                                            "host": {
                                                "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object",
                                                "description": "metadata of node"
                                            },
                                            "priority": {
                                                "type": "integer",
                                                "default": 0,
                                                "description": "priority of node"
                                            }
                                        }
                                    },
                                    "type": "array"
                                }
                            ]
                        },
                        "keepalive_pool": {
                            "properties": {
                                "size": {
                                    "type": "integer",
                                    "default": 320,
                                    "minimum": 1
                                },
                                "idle_timeout": {
                                    "type": "number",
                                    "default": 60,
                                    "minimum": 0
                                },
                                "requests": {
                                    "type": "integer",
                                    "default": 1000,
                                    "minimum": 1
                                }
                            },
                            "type": "object"
                        },
                        "id": {
                            "anyOf": [
                                {
                                    "maxLength": 64,
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9-_.]+$",
                                    "minLength": 1
                                },
                                {
                                    "minimum": 1,
                                    "type": "integer"
                                }
                            ]
                        },
                        "timeout": {
                            "required": [
                                "connect",
                                "send",
                                "read"
                            ],
                            "type": "object",
                            "properties": {
                                "send": {
                                    "exclusiveMinimum": 0,
                                    "type": "number"
                                },
                                "read": {
                                    "exclusiveMinimum": 0,
                                    "type": "number"
                                },
                                "connect": {
                                    "exclusiveMinimum": 0,
                                    "type": "number"
                                }
                            }
                        },
                        "hash_on": {
                            "type": "string",
                            "default": "vars",
                            "enum": [
                                "vars",
                                "header",
                                "cookie",
                                "consumer",
                                "vars_combinations"
                            ]
                        },
                        "upstream_host": {
                            "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
                            "type": "string"
                        },
                        "service_name": {
                            "maxLength": 256,
                            "type": "string",
                            "minLength": 1
                        },
                        "retry_timeout": {
                            "minimum": 0,
                            "type": "number"
                        },
                        "checks": {
                            "type": "object",
                            "properties": {
                                "passive": {
                                    "properties": {
                                        "type": {
                                            "enum": [
                                                "http",
                                                "https",
                                                "tcp"
                                            ],
                                            "default": "http",
                                            "type": "string"
                                        },
                                        "healthy": {
                                            "properties": {
                                                "successes": {
                                                    "maximum": 254,
                                                    "type": "integer",
                                                    "default": 5,
                                                    "minimum": 0
                                                },
                                                "http_statuses": {
                                                    "type": "array",
                                                    "items": {
                                                        "maximum": 599,
                                                        "type": "integer",
                                                        "minimum": 200
                                                    },
                                                    "minItems": 1,
                                                    "default": [
                                                        200,
                                                        201,
                                                        202,
                                                        203,
                                                        204,
                                                        205,
                                                        206,
                                                        207,
                                                        208,
                                                        226,
                                                        300,
                                                        301,
                                                        302,
                                                        303,
                                                        304,
                                                        305,
                                                        306,
                                                        307,
                                                        308
                                                    ],
                                                    "uniqueItems": true
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "unhealthy": {
                                            "properties": {
                                                "http_failures": {
                                                    "maximum": 254,
                                                    "type": "integer",
                                                    "default": 5,
                                                    "minimum": 0
                                                },
                                                "http_statuses": {
                                                    "type": "array",
                                                    "items": {
                                                        "maximum": 599,
                                                        "type": "integer",
                                                        "minimum": 200
                                                    },
                                                    "minItems": 1,
                                                    "default": [
                                                        429,
                                                        500,
                                                        503
                                                    ],
                                                    "uniqueItems": true
                                                },
                                                "tcp_failures": {
                                                    "maximum": 254,
                                                    "type": "integer",
                                                    "default": 2,
                                                    "minimum": 0
                                                },
                                                "timeouts": {
                                                    "maximum": 254,
                                                    "type": "integer",
                                                    "default": 7,
                                                    "minimum": 0
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "active": {
                                    "properties": {
                                        "req_headers": {
                                            "minItems": 1,
                                            "type": "array",
                                            "items": {
                                                "uniqueItems": true,
                                                "type": "string"
                                            }
                                        },
                                        "type": {
                                            "enum": [
                                                "http",
                                                "https",
                                                "tcp"
                                            ],
                                            "default": "http",
                                            "type": "string"
                                        },
                                        "healthy": {
                                            "properties": {
                                                "successes": {
                                                    "maximum": 254,
                                                    "type": "integer",
                                                    "default": 2,
                                                    "minimum": 1
                                                },
                                                "http_statuses": {
                                                    "type": "array",
                                                    "items": {
                                                        "maximum": 599,
                                                        "type": "integer",
                                                        "minimum": 200
                                                    },
                                                    "minItems": 1,
                                                    "default": [
                                                        200,
                                                        302
                                                    ],
                                                    "uniqueItems": true
                                                },
                                                "interval": {
                                                    "type": "integer",
                                                    "default": 1,
                                                    "minimum": 1
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "unhealthy": {
                                            "properties": {
                                                "http_statuses": {
                                                    "type": "array",
                                                    "items": {
                                                        "maximum": 599,
                                                        "type": "integer",
                                                        "minimum": 200
                                                    },
                                                    "minItems": 1,
                                                    "default": [
                                                        429,
                                                        404,
                                                        500,
                                                        501,
                                                        502,
                                                        503,
                                                        504,
                                                        505
                                                    ],
                                                    "uniqueItems": true
                                                },
                                                "timeouts": {
                                                    "maximum": 254,
                                                    "type": "integer",
                                                    "default": 3,
                                                    "minimum": 1
                                                },
                                                "http_failures": {
                                                    "maximum": 254,
                                                    "type": "integer",
                                                    "default": 5,
                                                    "minimum": 1
                                                },
                                                "tcp_failures": {
                                                    "maximum": 254,
                                                    "type": "integer",
                                                    "default": 2,
                                                    "minimum": 1
                                                },
                                                "interval": {
                                                    "type": "integer",
                                                    "default": 1,
                                                    "minimum": 1
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "port": {
                                            "maximum": 65535,
                                            "type": "integer",
                                            "minimum": 1
                                        },
                                        "http_path": {
                                            "default": "/",
                                            "type": "string"
                                        },
                                        "host": {
                                            "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
                                            "type": "string"
                                        },
                                        "timeout": {
                                            "default": 1,
                                            "type": "number"
                                        },
                                        "concurrency": {
                                            "default": 10,
                                            "type": "integer"
                                        },
                                        "https_verify_certificate": {
                                            "default": true,
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "anyOf": [
                                {
                                    "required": [
                                        "active"
                                    ]
                                },
                                {
                                    "required": [
                                        "active",
                                        "passive"
                                    ]
                                }
                            ]
                        },
                        "scheme": {
                            "enum": [
                                "grpc",
                                "grpcs",
                                "http",
                                "https",
                                "tcp",
                                "tls",
                                "udp",
                                "kafka"
                            ],
                            "default": "http",
                            "description": "The scheme of the upstream. For L7 proxy, it can be one of grpc/grpcs/http/https. For L4 proxy, it can be one of tcp/tls/udp. For specific protocols, it can be kafka."
                        },
                        "discovery_args": {
                            "properties": {
                                "group_name": {
                                    "type": "string",
                                    "description": "group name"
                                },
                                "namespace_id": {
                                    "type": "string",
                                    "description": "namespace id"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "oneOf": [
                        {
                            "required": [
                                "nodes"
                            ]
                        },
                        {
                            "required": [
                                "service_name",
                                "discovery_type"
                            ]
                        }
                    ]
                },
                "plugin_config_id": {
                    "anyOf": [
                        {
                            "maxLength": 64,
                            "type": "string",
                            "pattern": "^[a-zA-Z0-9-_.]+$",
                            "minLength": 1
                        },
                        {
                            "minimum": 1,
                            "type": "integer"
                        }
                    ]
                },
                "remote_addr": {
                    "type": "string",
                    "description": "client IP",
                    "anyOf": [
                        {
                            "format": "ipv4",
                            "type": "string",
                            "title": "IPv4"
                        },
                        {
                            "pattern": "^([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])/([12]?[0-9]|3[0-2])$",
                            "type": "string",
                            "title": "IPv4/CIDR"
                        },
                        {
                            "format": "ipv6",
                            "type": "string",
                            "title": "IPv6"
                        },
                        {
                            "pattern": "^([a-fA-F0-9]{0,4}:){1,8}(:[a-fA-F0-9]{0,4}){0,8}([a-fA-F0-9]{0,4})?/[0-9]{1,3}$",
                            "type": "string",
                            "title": "IPv6/CIDR"
                        }
                    ]
                },
                "methods": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "GET",
                            "POST",
                            "PUT",
                            "DELETE",
                            "PATCH",
                            "HEAD",
                            "OPTIONS",
                            "CONNECT",
                            "TRACE",
                            "PURGE"
                        ],
                        "description": "HTTP method"
                    },
                    "uniqueItems": true
                },
                "hosts": {
                    "minItems": 1,
                    "type": "array",
                    "items": {
                        "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
                        "type": "string"
                    },
                    "uniqueItems": true
                },
                "remote_addrs": {
                    "minItems": 1,
                    "type": "array",
                    "items": {
                        "type": "string",
                        "description": "client IP",
                        "anyOf": [
                            {
                                "format": "ipv4",
                                "type": "string",
                                "title": "IPv4"
                            },
                            {
                                "pattern": "^([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])/([12]?[0-9]|3[0-2])$",
                                "type": "string",
                                "title": "IPv4/CIDR"
                            },
                            {
                                "format": "ipv6",
                                "type": "string",
                                "title": "IPv6"
                            },
                            {
                                "pattern": "^([a-fA-F0-9]{0,4}:){1,8}(:[a-fA-F0-9]{0,4}){0,8}([a-fA-F0-9]{0,4})?/[0-9]{1,3}$",
                                "type": "string",
                                "title": "IPv6/CIDR"
                            }
                        ]
                    },
                    "uniqueItems": true
                },
                "filter_func": {
                    "pattern": "^function",
                    "type": "string",
                    "minLength": 10
                },
                "vars": {
                    "type": "array"
                },
                "host": {
                    "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
                    "type": "string"
                },
                "script_id": {
                    "anyOf": [
                        {
                            "maxLength": 64,
                            "type": "string",
                            "pattern": "^[a-zA-Z0-9-_.]+$",
                            "minLength": 1
                        },
                        {
                            "minimum": 1,
                            "type": "integer"
                        }
                    ]
                },
                "priority": {
                    "default": 0,
                    "type": "integer"
                },
                "plugins": {
                    "type": "object"
                },
                "timeout": {
                    "required": [
                        "connect",
                        "send",
                        "read"
                    ],
                    "type": "object",
                    "properties": {
                        "send": {
                            "exclusiveMinimum": 0,
                            "type": "number"
                        },
                        "read": {
                            "exclusiveMinimum": 0,
                            "type": "number"
                        },
                        "connect": {
                            "exclusiveMinimum": 0,
                            "type": "number"
                        }
                    }
                }
            }
        },
        "upstream": {
            "type": "object",
            "properties": {
                "pass_host": {
                    "enum": [
                        "pass",
                        "node",
                        "rewrite"
                    ],
                    "type": "string",
                    "default": "pass",
                    "description": "mod of host passing"
                },
                "type": {
                    "type": "string",
                    "default": "roundrobin",
                    "description": "algorithms of load balancing"
                },
                "discovery_type": {
                    "type": "string",
                    "description": "discovery type"
                },
                "tls": {
                    "type": "object",
                    "properties": {
                        "client_cert_id": {
                            "anyOf": [
                                {
                                    "maxLength": 64,
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9-_.]+$",
                                    "minLength": 1
                                },
                                {
                                    "minimum": 1,
                                    "type": "integer"
                                }
                            ]
                        },
                        "client_key": {
                            "maxLength": 65536,
                            "type": "string",
                            "minLength": 128
                        },
                        "verify": {
                            "description": "Turn on server certificate verification, currently only kafka upstream is supported",
                            "default": false,
                            "type": "boolean"
                        },
                        "client_cert": {
                            "maxLength": 65536,
                            "type": "string",
                            "minLength": 128
                        }
                    },
                    "dependencies": {
                        "client_cert": {
                            "required": [
                                "client_key"
                            ],
                            "not": {
                                "required": [
                                    "client_cert_id"
                                ]
                            }
                        },
                        "client_key": {
                            "required": [
                                "client_cert"
                            ],
                            "not": {
                                "required": [
                                    "client_cert_id"
                                ]
                            }
                        },
                        "client_cert_id": {
                            "not": {
                                "required": [
                                    "client_client",
                                    "client_key"
                                ]
                            }
                        }
                    }
                },
                "labels": {
                    "patternProperties": {
                        ".*": {
                            "maxLength": 64,
                            "type": "string",
                            "pattern": "^\\S+$",
                            "description": "value of label",
                            "minLength": 1
                        }
                    },
                    "type": "object",
                    "description": "key/value pairs to specify attributes"
                },
                "key": {
                    "type": "string",
                    "description": "the key of chash for dynamic load balancing"
                },
                "desc": {
                    "maxLength": 256,
                    "type": "string"
                },
                "update_time": {
                    "type": "integer"
                },
                "name": {
                    "maxLength": 100,
                    "type": "string",
                    "minLength": 1
                },
                "create_time": {
                    "type": "integer"
                },
                "retries": {
                    "minimum": 0,
                    "type": "integer"
                },
                "nodes": {
                    "anyOf": [
                        {
                            "patternProperties": {
                                ".*": {
                                    "type": "integer",
                                    "description": "weight of node",
                                    "minimum": 0
                                }
                            },
                            "type": "object"
                        },
                        {
                            "items": {
                                "required": [
                                    "host",
                                    "port",
                                    "weight"
                                ],
                                "type": "object",
                                "properties": {
                                    "port": {
                                        "type": "integer",
                                        "description": "port of node",
                                        "minimum": 1
                                    },
                                    "weight": {
                                        "type": "integer",
                                        "description": "weight of node",
                                        "minimum": 0
                                    },
                                    "host": {
                                        "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
                                        "type": "string"
                                    },
                                    "metadata": {
                                        "type": "object",
                                        "description": "metadata of node"
                                    },
                                    "priority": {
                                        "type": "integer",
                                        "default": 0,
                                        "description": "priority of node"
                                    }
                                }
                            },
                            "type": "array"
                        }
                    ]
                },
                "keepalive_pool": {
                    "properties": {
                        "size": {
                            "type": "integer",
                            "default": 320,
                            "minimum": 1
                        },
                        "idle_timeout": {
                            "type": "number",
                            "default": 60,
                            "minimum": 0
                        },
                        "requests": {
                            "type": "integer",
                            "default": 1000,
                            "minimum": 1
                        }
                    },
                    "type": "object"
                },
                "id": {
                    "anyOf": [
                        {
                            "maxLength": 64,
                            "type": "string",
                            "pattern": "^[a-zA-Z0-9-_.]+$",
                            "minLength": 1
                        },
                        {
                            "minimum": 1,
                            "type": "integer"
                        }
                    ]
                },
                "timeout": {
                    "required": [
                        "connect",
                        "send",
                        "read"
                    ],
                    "type": "object",
                    "properties": {
                        "send": {
                            "exclusiveMinimum": 0,
                            "type": "number"
                        },
                        "read": {
                            "exclusiveMinimum": 0,
                            "type": "number"
                        },
                        "connect": {
                            "exclusiveMinimum": 0,
                            "type": "number"
                        }
                    }
                },
                "hash_on": {
                    "type": "string",
                    "default": "vars",
                    "enum": [
                        "vars",
                        "header",
                        "cookie",
                        "consumer",
                        "vars_combinations"
                    ]
                },
                "upstream_host": {
                    "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
                    "type": "string"
                },
                "service_name": {
                    "maxLength": 256,
                    "type": "string",
                    "minLength": 1
                },
                "retry_timeout": {
                    "minimum": 0,
                    "type": "number"
                },
                "checks": {
                    "type": "object",
                    "properties": {
                        "passive": {
                            "properties": {
                                "type": {
                                    "enum": [
                                        "http",
                                        "https",
                                        "tcp"
                                    ],
                                    "default": "http",
                                    "type": "string"
                                },
                                "healthy": {
                                    "properties": {
                                        "successes": {
                                            "maximum": 254,
                                            "type": "integer",
                                            "default": 5,
                                            "minimum": 0
                                        },
                                        "http_statuses": {
                                            "type": "array",
                                            "items": {
                                                "maximum": 599,
                                                "type": "integer",
                                                "minimum": 200
                                            },
                                            "minItems": 1,
                                            "default": [
                                                200,
                                                201,
                                                202,
                                                203,
                                                204,
                                                205,
                                                206,
                                                207,
                                                208,
                                                226,
                                                300,
                                                301,
                                                302,
                                                303,
                                                304,
                                                305,
                                                306,
                                                307,
                                                308
                                            ],
                                            "uniqueItems": true
                                        }
                                    },
                                    "type": "object"
                                },
                                "unhealthy": {
                                    "properties": {
                                        "http_failures": {
                                            "maximum": 254,
                                            "type": "integer",
                                            "default": 5,
                                            "minimum": 0
                                        },
                                        "http_statuses": {
                                            "type": "array",
                                            "items": {
                                                "maximum": 599,
                                                "type": "integer",
                                                "minimum": 200
                                            },
                                            "minItems": 1,
                                            "default": [
                                                429,
                                                500,
                                                503
                                            ],
                                            "uniqueItems": true
                                        },
                                        "tcp_failures": {
                                            "maximum": 254,
                                            "type": "integer",
                                            "default": 2,
                                            "minimum": 0
                                        },
                                        "timeouts": {
                                            "maximum": 254,
                                            "type": "integer",
                                            "default": 7,
                                            "minimum": 0
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "active": {
                            "properties": {
                                "req_headers": {
                                    "minItems": 1,
                                    "type": "array",
                                    "items": {
                                        "uniqueItems": true,
                                        "type": "string"
                                    }
                                },
                                "type": {
                                    "enum": [
                                        "http",
                                        "https",
                                        "tcp"
                                    ],
                                    "default": "http",
                                    "type": "string"
                                },
                                "healthy": {
                                    "properties": {
                                        "successes": {
                                            "maximum": 254,
                                            "type": "integer",
                                            "default": 2,
                                            "minimum": 1
                                        },
                                        "http_statuses": {
                                            "type": "array",
                                            "items": {
                                                "maximum": 599,
                                                "type": "integer",
                                                "minimum": 200
                                            },
                                            "minItems": 1,
                                            "default": [
                                                200,
                                                302
                                            ],
                                            "uniqueItems": true
                                        },
                                        "interval": {
                                            "type": "integer",
                                            "default": 1,
                                            "minimum": 1
                                        }
                                    },
                                    "type": "object"
                                },
                                "unhealthy": {
                                    "properties": {
                                        "http_statuses": {
                                            "type": "array",
                                            "items": {
                                                "maximum": 599,
                                                "type": "integer",
                                                "minimum": 200
                                            },
                                            "minItems": 1,
                                            "default": [
                                                429,
                                                404,
                                                500,
                                                501,
                                                502,
                                                503,
                                                504,
                                                505
                                            ],
                                            "uniqueItems": true
                                        },
                                        "timeouts": {
                                            "maximum": 254,
                                            "type": "integer",
                                            "default": 3,
                                            "minimum": 1
                                        },
                                        "http_failures": {
                                            "maximum": 254,
                                            "type": "integer",
                                            "default": 5,
                                            "minimum": 1
                                        },
                                        "tcp_failures": {
                                            "maximum": 254,
                                            "type": "integer",
                                            "default": 2,
                                            "minimum": 1
                                        },
                                        "interval": {
                                            "type": "integer",
                                            "default": 1,
                                            "minimum": 1
                                        }
                                    },
                                    "type": "object"
                                },
                                "port": {
                                    "maximum": 65535,
                                    "type": "integer",
                                    "minimum": 1
                                },
                                "http_path": {
                                    "default": "/",
                                    "type": "string"
                                },
                                "host": {
                                    "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
                                    "type": "string"
                                },
                                "timeout": {
                                    "default": 1,
                                    "type": "number"
                                },
                                "concurrency": {
                                    "default": 10,
                                    "type": "integer"
                                },
                                "https_verify_certificate": {
                                    "default": true,
                                    "type": "boolean"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "anyOf": [
                        {
                            "required": [
                                "active"
                            ]
                        },
                        {
                            "required": [
                                "active",
                                "passive"
                            ]
                        }
                    ]
                },
                "scheme": {
                    "enum": [
                        "grpc",
                        "grpcs",
                        "http",
                        "https",
                        "tcp",
                        "tls",
                        "udp",
                        "kafka"
                    ],
                    "default": "http",
                    "description": "The scheme of the upstream. For L7 proxy, it can be one of grpc/grpcs/http/https. For L4 proxy, it can be one of tcp/tls/udp. For specific protocols, it can be kafka."
                },
                "discovery_args": {
                    "properties": {
                        "group_name": {
                            "type": "string",
                            "description": "group name"
                        },
                        "namespace_id": {
                            "type": "string",
                            "description": "namespace id"
                        }
                    },
                    "type": "object"
                }
            },
            "oneOf": [
                {
                    "required": [
                        "nodes"
                    ]
                },
                {
                    "required": [
                        "service_name",
                        "discovery_type"
                    ]
                }
            ]
        },
        "plugin_config": {
            "required": [
                "id",
                "plugins"
            ],
            "type": "object",
            "properties": {
                "create_time": {
                    "type": "integer"
                },
                "desc": {
                    "maxLength": 256,
                    "type": "string"
                },
                "labels": {
                    "patternProperties": {
                        ".*": {
                            "maxLength": 64,
                            "type": "string",
                            "pattern": "^\\S+$",
                            "description": "value of label",
                            "minLength": 1
                        }
                    },
                    "type": "object",
                    "description": "key/value pairs to specify attributes"
                },
                "update_time": {
                    "type": "integer"
                },
                "plugins": {
                    "type": "object"
                },
                "id": {
                    "anyOf": [
                        {
                            "maxLength": 64,
                            "type": "string",
                            "pattern": "^[a-zA-Z0-9-_.]+$",
                            "minLength": 1
                        },
                        {
                            "minimum": 1,
                            "type": "integer"
                        }
                    ]
                }
            }
        },
        "consumer_group": {
            "required": [
                "id",
                "plugins"
            ],
            "type": "object",
            "properties": {
                "create_time": {
                    "type": "integer"
                },
                "desc": {
                    "maxLength": 256,
                    "type": "string"
                },
                "labels": {
                    "patternProperties": {
                        ".*": {
                            "maxLength": 64,
                            "type": "string",
                            "pattern": "^\\S+$",
                            "description": "value of label",
                            "minLength": 1
                        }
                    },
                    "type": "object",
                    "description": "key/value pairs to specify attributes"
                },
                "update_time": {
                    "type": "integer"
                },
                "plugins": {
                    "type": "object"
                },
                "id": {
                    "anyOf": [
                        {
                            "maxLength": 64,
                            "type": "string",
                            "pattern": "^[a-zA-Z0-9-_.]+$",
                            "minLength": 1
                        },
                        {
                            "minimum": 1,
                            "type": "integer"
                        }
                    ]
                }
            }
        },
        "global_rule": {
            "required": [
                "plugins"
            ],
            "type": "object",
            "properties": {
                "create_time": {
                    "type": "integer"
                },
                "update_time": {
                    "type": "integer"
                },
                "plugins": {
                    "type": "object"
                },
                "id": {
                    "anyOf": [
                        {
                            "maxLength": 64,
                            "type": "string",
                            "pattern": "^[a-zA-Z0-9-_.]+$",
                            "minLength": 1
                        },
                        {
                            "minimum": 1,
                            "type": "integer"
                        }
                    ]
                }
            }
        },
        "plugins": {
            "items": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "stream": {
                        "type": "boolean"
                    },
                    "name": {
                        "minLength": 1,
                        "type": "string"
                    }
                }
            },
            "type": "array"
        },
        "upstream_hash_header_schema": {
            "pattern": "^[a-zA-Z0-9-_]+$",
            "type": "string"
        },
        "upstream_hash_vars_schema": {
            "pattern": "^((uri|server_name|server_addr|request_uri|remote_port|remote_addr|query_string|host|hostname)|arg_[0-9a-zA-z_-]+)$",
            "type": "string"
        },
        "proto": {
            "required": [
                "content"
            ],
            "type": "object",
            "properties": {
                "create_time": {
                    "type": "integer"
                },
                "desc": {
                    "maxLength": 256,
                    "type": "string"
                },
                "content": {
                    "maxLength": 1048576,
                    "type": "string",
                    "minLength": 1
                },
                "update_time": {
                    "type": "integer"
                },
                "id": {
                    "anyOf": [
                        {
                            "maxLength": 64,
                            "type": "string",
                            "pattern": "^[a-zA-Z0-9-_.]+$",
                            "minLength": 1
                        },
                        {
                            "minimum": 1,
                            "type": "integer"
                        }
                    ]
                }
            }
        },
        "ssl": {
            "type": "object",
            "else": {
                "required": [
                    "key",
                    "cert"
                ]
            },
            "then": {
                "oneOf": [
                    {
                        "required": [
                            "sni",
                            "key",
                            "cert"
                        ]
                    },
                    {
                        "required": [
                            "snis",
                            "key",
                            "cert"
                        ]
                    }
                ]
            },
            "properties": {
                "client": {
                    "required": [
                        "ca"
                    ],
                    "type": "object",
                    "properties": {
                        "ca": {
                            "maxLength": 65536,
                            "type": "string",
                            "minLength": 128
                        },
                        "depth": {
                            "type": "integer",
                            "default": 1,
                            "minimum": 0
                        }
                    }
                },
                "type": {
                    "enum": [
                        "server",
                        "client"
                    ],
                    "type": "string",
                    "default": "server",
                    "description": "ssl certificate type, server to server certificate, client to client certificate for upstream"
                },
                "update_time": {
                    "type": "integer"
                },
                "snis": {
                    "minItems": 1,
                    "type": "array",
                    "items": {
                        "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
                        "type": "string"
                    }
                },
                "labels": {
                    "patternProperties": {
                        ".*": {
                            "maxLength": 64,
                            "type": "string",
                            "pattern": "^\\S+$",
                            "description": "value of label",
                            "minLength": 1
                        }
                    },
                    "type": "object",
                    "description": "key/value pairs to specify attributes"
                },
                "create_time": {
                    "type": "integer"
                },
                "exptime": {
                    "minimum": 1588262400,
                    "type": "integer"
                },
                "key": {
                    "maxLength": 65536,
                    "type": "string",
                    "minLength": 128
                },
                "validity_start": {
                    "type": "integer"
                },
                "validity_end": {
                    "type": "integer"
                },
                "keys": {
                    "items": {
                        "maxLength": 65536,
                        "type": "string",
                        "minLength": 128
                    },
                    "type": "array"
                },
                "cert": {
                    "maxLength": 65536,
                    "type": "string",
                    "minLength": 128
                },
                "certs": {
                    "items": {
                        "maxLength": 65536,
                        "type": "string",
                        "minLength": 128
                    },
                    "type": "array"
                },
                "sni": {
                    "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
                    "type": "string"
                },
                "status": {
                    "enum": [
                        1,
                        0
                    ],
                    "type": "integer",
                    "default": 1,
                    "description": "ssl status, 1 to enable, 0 to disable"
                },
                "id": {
                    "anyOf": [
                        {
                            "maxLength": 64,
                            "type": "string",
                            "pattern": "^[a-zA-Z0-9-_.]+$",
                            "minLength": 1
                        },
                        {
                            "minimum": 1,
                            "type": "integer"
                        }
                    ]
                }
            },
            "if": {
                "properties": {
                    "type": {
                        "enum": [
                            "server"
                        ]
                    }
                }
            }
        },
        "service": {
            "properties": {
                "create_time": {
                    "type": "integer"
                },
                "upstream": {
                    "type": "object",
                    "properties": {
                        "pass_host": {
                            "enum": [
                                "pass",
                                "node",
                                "rewrite"
                            ],
                            "type": "string",
                            "default": "pass",
                            "description": "mod of host passing"
                        },
                        "type": {
                            "type": "string",
                            "default": "roundrobin",
                            "description": "algorithms of load balancing"
                        },
                        "discovery_type": {
                            "type": "string",
                            "description": "discovery type"
                        },
                        "tls": {
                            "type": "object",
                            "properties": {
                                "client_cert_id": {
                                    "anyOf": [
                                        {
                                            "maxLength": 64,
                                            "type": "string",
                                            "pattern": "^[a-zA-Z0-9-_.]+$",
                                            "minLength": 1
                                        },
                                        {
                                            "minimum": 1,
                                            "type": "integer"
                                        }
                                    ]
                                },
                                "client_key": {
                                    "maxLength": 65536,
                                    "type": "string",
                                    "minLength": 128
                                },
                                "verify": {
                                    "description": "Turn on server certificate verification, currently only kafka upstream is supported",
                                    "default": false,
                                    "type": "boolean"
                                },
                                "client_cert": {
                                    "maxLength": 65536,
                                    "type": "string",
                                    "minLength": 128
                                }
                            },
                            "dependencies": {
                                "client_cert": {
                                    "required": [
                                        "client_key"
                                    ],
                                    "not": {
                                        "required": [
                                            "client_cert_id"
                                        ]
                                    }
                                },
                                "client_key": {
                                    "required": [
                                        "client_cert"
                                    ],
                                    "not": {
                                        "required": [
                                            "client_cert_id"
                                        ]
                                    }
                                },
                                "client_cert_id": {
                                    "not": {
                                        "required": [
                                            "client_client",
                                            "client_key"
                                        ]
                                    }
                                }
                            }
                        },
                        "labels": {
                            "patternProperties": {
                                ".*": {
                                    "maxLength": 64,
                                    "type": "string",
                                    "pattern": "^\\S+$",
                                    "description": "value of label",
                                    "minLength": 1
                                }
                            },
                            "type": "object",
                            "description": "key/value pairs to specify attributes"
                        },
                        "key": {
                            "type": "string",
                            "description": "the key of chash for dynamic load balancing"
                        },
                        "desc": {
                            "maxLength": 256,
                            "type": "string"
                        },
                        "update_time": {
                            "type": "integer"
                        },
                        "name": {
                            "maxLength": 100,
                            "type": "string",
                            "minLength": 1
                        },
                        "create_time": {
                            "type": "integer"
                        },
                        "retries": {
                            "minimum": 0,
                            "type": "integer"
                        },
                        "nodes": {
                            "anyOf": [
                                {
                                    "patternProperties": {
                                        ".*": {
                                            "type": "integer",
                                            "description": "weight of node",
                                            "minimum": 0
                                        }
                                    },
                                    "type": "object"
                                },
                                {
                                    "items": {
                                        "required": [
                                            "host",
                                            "port",
                                            "weight"
                                        ],
                                        "type": "object",
                                        "properties": {
                                            "port": {
                                                "type": "integer",
                                                "description": "port of node",
                                                "minimum": 1
                                            },
                                            "weight": {
                                                "type": "integer",
                                                "description": "weight of node",
                                                "minimum": 0
                                            },
                                            "host": {
                                                "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object",
                                                "description": "metadata of node"
                                            },
                                            "priority": {
                                                "type": "integer",
                                                "default": 0,
                                                "description": "priority of node"
                                            }
                                        }
                                    },
                                    "type": "array"
                                }
                            ]
                        },
                        "keepalive_pool": {
                            "properties": {
                                "size": {
                                    "type": "integer",
                                    "default": 320,
                                    "minimum": 1
                                },
                                "idle_timeout": {
                                    "type": "number",
                                    "default": 60,
                                    "minimum": 0
                                },
                                "requests": {
                                    "type": "integer",
                                    "default": 1000,
                                    "minimum": 1
                                }
                            },
                            "type": "object"
                        },
                        "id": {
                            "anyOf": [
                                {
                                    "maxLength": 64,
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9-_.]+$",
                                    "minLength": 1
                                },
                                {
                                    "minimum": 1,
                                    "type": "integer"
                                }
                            ]
                        },
                        "timeout": {
                            "required": [
                                "connect",
                                "send",
                                "read"
                            ],
                            "type": "object",
                            "properties": {
                                "send": {
                                    "exclusiveMinimum": 0,
                                    "type": "number"
                                },
                                "read": {
                                    "exclusiveMinimum": 0,
                                    "type": "number"
                                },
                                "connect": {
                                    "exclusiveMinimum": 0,
                                    "type": "number"
                                }
                            }
                        },
                        "hash_on": {
                            "type": "string",
                            "default": "vars",
                            "enum": [
                                "vars",
                                "header",
                                "cookie",
                                "consumer",
                                "vars_combinations"
                            ]
                        },
                        "upstream_host": {
                            "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
                            "type": "string"
                        },
                        "service_name": {
                            "maxLength": 256,
                            "type": "string",
                            "minLength": 1
                        },
                        "retry_timeout": {
                            "minimum": 0,
                            "type": "number"
                        },
                        "checks": {
                            "type": "object",
                            "properties": {
                                "passive": {
                                    "properties": {
                                        "type": {
                                            "enum": [
                                                "http",
                                                "https",
                                                "tcp"
                                            ],
                                            "default": "http",
                                            "type": "string"
                                        },
                                        "healthy": {
                                            "properties": {
                                                "successes": {
                                                    "maximum": 254,
                                                    "type": "integer",
                                                    "default": 5,
                                                    "minimum": 0
                                                },
                                                "http_statuses": {
                                                    "type": "array",
                                                    "items": {
                                                        "maximum": 599,
                                                        "type": "integer",
                                                        "minimum": 200
                                                    },
                                                    "minItems": 1,
                                                    "default": [
                                                        200,
                                                        201,
                                                        202,
                                                        203,
                                                        204,
                                                        205,
                                                        206,
                                                        207,
                                                        208,
                                                        226,
                                                        300,
                                                        301,
                                                        302,
                                                        303,
                                                        304,
                                                        305,
                                                        306,
                                                        307,
                                                        308
                                                    ],
                                                    "uniqueItems": true
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "unhealthy": {
                                            "properties": {
                                                "http_failures": {
                                                    "maximum": 254,
                                                    "type": "integer",
                                                    "default": 5,
                                                    "minimum": 0
                                                },
                                                "http_statuses": {
                                                    "type": "array",
                                                    "items": {
                                                        "maximum": 599,
                                                        "type": "integer",
                                                        "minimum": 200
                                                    },
                                                    "minItems": 1,
                                                    "default": [
                                                        429,
                                                        500,
                                                        503
                                                    ],
                                                    "uniqueItems": true
                                                },
                                                "tcp_failures": {
                                                    "maximum": 254,
                                                    "type": "integer",
                                                    "default": 2,
                                                    "minimum": 0
                                                },
                                                "timeouts": {
                                                    "maximum": 254,
                                                    "type": "integer",
                                                    "default": 7,
                                                    "minimum": 0
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "active": {
                                    "properties": {
                                        "req_headers": {
                                            "minItems": 1,
                                            "type": "array",
                                            "items": {
                                                "uniqueItems": true,
                                                "type": "string"
                                            }
                                        },
                                        "type": {
                                            "enum": [
                                                "http",
                                                "https",
                                                "tcp"
                                            ],
                                            "default": "http",
                                            "type": "string"
                                        },
                                        "healthy": {
                                            "properties": {
                                                "successes": {
                                                    "maximum": 254,
                                                    "type": "integer",
                                                    "default": 2,
                                                    "minimum": 1
                                                },
                                                "http_statuses": {
                                                    "type": "array",
                                                    "items": {
                                                        "maximum": 599,
                                                        "type": "integer",
                                                        "minimum": 200
                                                    },
                                                    "minItems": 1,
                                                    "default": [
                                                        200,
                                                        302
                                                    ],
                                                    "uniqueItems": true
                                                },
                                                "interval": {
                                                    "type": "integer",
                                                    "default": 1,
                                                    "minimum": 1
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "unhealthy": {
                                            "properties": {
                                                "http_statuses": {
                                                    "type": "array",
                                                    "items": {
                                                        "maximum": 599,
                                                        "type": "integer",
                                                        "minimum": 200
                                                    },
                                                    "minItems": 1,
                                                    "default": [
                                                        429,
                                                        404,
                                                        500,
                                                        501,
                                                        502,
                                                        503,
                                                        504,
                                                        505
                                                    ],
                                                    "uniqueItems": true
                                                },
                                                "timeouts": {
                                                    "maximum": 254,
                                                    "type": "integer",
                                                    "default": 3,
                                                    "minimum": 1
                                                },
                                                "http_failures": {
                                                    "maximum": 254,
                                                    "type": "integer",
                                                    "default": 5,
                                                    "minimum": 1
                                                },
                                                "tcp_failures": {
                                                    "maximum": 254,
                                                    "type": "integer",
                                                    "default": 2,
                                                    "minimum": 1
                                                },
                                                "interval": {
                                                    "type": "integer",
                                                    "default": 1,
                                                    "minimum": 1
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "port": {
                                            "maximum": 65535,
                                            "type": "integer",
                                            "minimum": 1
                                        },
                                        "http_path": {
                                            "default": "/",
                                            "type": "string"
                                        },
                                        "host": {
                                            "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
                                            "type": "string"
                                        },
                                        "timeout": {
                                            "default": 1,
                                            "type": "number"
                                        },
                                        "concurrency": {
                                            "default": 10,
                                            "type": "integer"
                                        },
                                        "https_verify_certificate": {
                                            "default": true,
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "anyOf": [
                                {
                                    "required": [
                                        "active"
                                    ]
                                },
                                {
                                    "required": [
                                        "active",
                                        "passive"
                                    ]
                                }
                            ]
                        },
                        "scheme": {
                            "enum": [
                                "grpc",
                                "grpcs",
                                "http",
                                "https",
                                "tcp",
                                "tls",
                                "udp",
                                "kafka"
                            ],
                            "default": "http",
                            "description": "The scheme of the upstream. For L7 proxy, it can be one of grpc/grpcs/http/https. For L4 proxy, it can be one of tcp/tls/udp. For specific protocols, it can be kafka."
                        },
                        "discovery_args": {
                            "properties": {
                                "group_name": {
                                    "type": "string",
                                    "description": "group name"
                                },
                                "namespace_id": {
                                    "type": "string",
                                    "description": "namespace id"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "oneOf": [
                        {
                            "required": [
                                "nodes"
                            ]
                        },
                        {
                            "required": [
                                "service_name",
                                "discovery_type"
                            ]
                        }
                    ]
                },
                "labels": {
                    "patternProperties": {
                        ".*": {
                            "maxLength": 64,
                            "type": "string",
                            "pattern": "^\\S+$",
                            "description": "value of label",
                            "minLength": 1
                        }
                    },
                    "type": "object",
                    "description": "key/value pairs to specify attributes"
                },
                "enable_websocket": {
                    "type": "boolean",
                    "description": "enable websocket for request"
                },
                "hosts": {
                    "minItems": 1,
                    "type": "array",
                    "items": {
                        "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
                        "type": "string"
                    },
                    "uniqueItems": true
                },
                "upstream_id": {
                    "anyOf": [
                        {
                            "maxLength": 64,
                            "type": "string",
                            "pattern": "^[a-zA-Z0-9-_.]+$",
                            "minLength": 1
                        },
                        {
                            "minimum": 1,
                            "type": "integer"
                        }
                    ]
                },
                "desc": {
                    "maxLength": 256,
                    "type": "string"
                },
                "plugins": {
                    "type": "object"
                },
                "id": {
                    "anyOf": [
                        {
                            "maxLength": 64,
                            "type": "string",
                            "pattern": "^[a-zA-Z0-9-_.]+$",
                            "minLength": 1
                        },
                        {
                            "minimum": 1,
                            "type": "integer"
                        }
                    ]
                },
                "update_time": {
                    "type": "integer"
                },
                "script": {
                    "maxLength": 102400,
                    "type": "string",
                    "minLength": 10
                },
                "name": {
                    "maxLength": 100,
                    "type": "string",
                    "minLength": 1
                }
            },
            "type": "object"
        },
        "stream_route": {
            "properties": {
                "create_time": {
                    "type": "integer"
                },
                "upstream": {
                    "type": "object",
                    "properties": {
                        "pass_host": {
                            "enum": [
                                "pass",
                                "node",
                                "rewrite"
                            ],
                            "type": "string",
                            "default": "pass",
                            "description": "mod of host passing"
                        },
                        "type": {
                            "type": "string",
                            "default": "roundrobin",
                            "description": "algorithms of load balancing"
                        },
                        "discovery_type": {
                            "type": "string",
                            "description": "discovery type"
                        },
                        "tls": {
                            "type": "object",
                            "properties": {
                                "client_cert_id": {
                                    "anyOf": [
                                        {
                                            "maxLength": 64,
                                            "type": "string",
                                            "pattern": "^[a-zA-Z0-9-_.]+$",
                                            "minLength": 1
                                        },
                                        {
                                            "minimum": 1,
                                            "type": "integer"
                                        }
                                    ]
                                },
                                "client_key": {
                                    "maxLength": 65536,
                                    "type": "string",
                                    "minLength": 128
                                },
                                "verify": {
                                    "description": "Turn on server certificate verification, currently only kafka upstream is supported",
                                    "default": false,
                                    "type": "boolean"
                                },
                                "client_cert": {
                                    "maxLength": 65536,
                                    "type": "string",
                                    "minLength": 128
                                }
                            },
                            "dependencies": {
                                "client_cert": {
                                    "required": [
                                        "client_key"
                                    ],
                                    "not": {
                                        "required": [
                                            "client_cert_id"
                                        ]
                                    }
                                },
                                "client_key": {
                                    "required": [
                                        "client_cert"
                                    ],
                                    "not": {
                                        "required": [
                                            "client_cert_id"
                                        ]
                                    }
                                },
                                "client_cert_id": {
                                    "not": {
                                        "required": [
                                            "client_client",
                                            "client_key"
                                        ]
                                    }
                                }
                            }
                        },
                        "labels": {
                            "patternProperties": {
                                ".*": {
                                    "maxLength": 64,
                                    "type": "string",
                                    "pattern": "^\\S+$",
                                    "description": "value of label",
                                    "minLength": 1
                                }
                            },
                            "type": "object",
                            "description": "key/value pairs to specify attributes"
                        },
                        "key": {
                            "type": "string",
                            "description": "the key of chash for dynamic load balancing"
                        },
                        "desc": {
                            "maxLength": 256,
                            "type": "string"
                        },
                        "update_time": {
                            "type": "integer"
                        },
                        "name": {
                            "maxLength": 100,
                            "type": "string",
                            "minLength": 1
                        },
                        "create_time": {
                            "type": "integer"
                        },
                        "retries": {
                            "minimum": 0,
                            "type": "integer"
                        },
                        "nodes": {
                            "anyOf": [
                                {
                                    "patternProperties": {
                                        ".*": {
                                            "type": "integer",
                                            "description": "weight of node",
                                            "minimum": 0
                                        }
                                    },
                                    "type": "object"
                                },
                                {
                                    "items": {
                                        "required": [
                                            "host",
                                            "port",
                                            "weight"
                                        ],
                                        "type": "object",
                                        "properties": {
                                            "port": {
                                                "type": "integer",
                                                "description": "port of node",
                                                "minimum": 1
                                            },
                                            "weight": {
                                                "type": "integer",
                                                "description": "weight of node",
                                                "minimum": 0
                                            },
                                            "host": {
                                                "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object",
                                                "description": "metadata of node"
                                            },
                                            "priority": {
                                                "type": "integer",
                                                "default": 0,
                                                "description": "priority of node"
                                            }
                                        }
                                    },
                                    "type": "array"
                                }
                            ]
                        },
                        "keepalive_pool": {
                            "properties": {
                                "size": {
                                    "type": "integer",
                                    "default": 320,
                                    "minimum": 1
                                },
                                "idle_timeout": {
                                    "type": "number",
                                    "default": 60,
                                    "minimum": 0
                                },
                                "requests": {
                                    "type": "integer",
                                    "default": 1000,
                                    "minimum": 1
                                }
                            },
                            "type": "object"
                        },
                        "id": {
                            "anyOf": [
                                {
                                    "maxLength": 64,
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9-_.]+$",
                                    "minLength": 1
                                },
                                {
                                    "minimum": 1,
                                    "type": "integer"
                                }
                            ]
                        },
                        "timeout": {
                            "required": [
                                "connect",
                                "send",
                                "read"
                            ],
                            "type": "object",
                            "properties": {
                                "send": {
                                    "exclusiveMinimum": 0,
                                    "type": "number"
                                },
                                "read": {
                                    "exclusiveMinimum": 0,
                                    "type": "number"
                                },
                                "connect": {
                                    "exclusiveMinimum": 0,
                                    "type": "number"
                                }
                            }
                        },
                        "hash_on": {
                            "type": "string",
                            "default": "vars",
                            "enum": [
                                "vars",
                                "header",
                                "cookie",
                                "consumer",
                                "vars_combinations"
                            ]
                        },
                        "upstream_host": {
                            "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
                            "type": "string"
                        },
                        "service_name": {
                            "maxLength": 256,
                            "type": "string",
                            "minLength": 1
                        },
                        "retry_timeout": {
                            "minimum": 0,
                            "type": "number"
                        },
                        "checks": {
                            "type": "object",
                            "properties": {
                                "passive": {
                                    "properties": {
                                        "type": {
                                            "enum": [
                                                "http",
                                                "https",
                                                "tcp"
                                            ],
                                            "default": "http",
                                            "type": "string"
                                        },
                                        "healthy": {
                                            "properties": {
                                                "successes": {
                                                    "maximum": 254,
                                                    "type": "integer",
                                                    "default": 5,
                                                    "minimum": 0
                                                },
                                                "http_statuses": {
                                                    "type": "array",
                                                    "items": {
                                                        "maximum": 599,
                                                        "type": "integer",
                                                        "minimum": 200
                                                    },
                                                    "minItems": 1,
                                                    "default": [
                                                        200,
                                                        201,
                                                        202,
                                                        203,
                                                        204,
                                                        205,
                                                        206,
                                                        207,
                                                        208,
                                                        226,
                                                        300,
                                                        301,
                                                        302,
                                                        303,
                                                        304,
                                                        305,
                                                        306,
                                                        307,
                                                        308
                                                    ],
                                                    "uniqueItems": true
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "unhealthy": {
                                            "properties": {
                                                "http_failures": {
                                                    "maximum": 254,
                                                    "type": "integer",
                                                    "default": 5,
                                                    "minimum": 0
                                                },
                                                "http_statuses": {
                                                    "type": "array",
                                                    "items": {
                                                        "maximum": 599,
                                                        "type": "integer",
                                                        "minimum": 200
                                                    },
                                                    "minItems": 1,
                                                    "default": [
                                                        429,
                                                        500,
                                                        503
                                                    ],
                                                    "uniqueItems": true
                                                },
                                                "tcp_failures": {
                                                    "maximum": 254,
                                                    "type": "integer",
                                                    "default": 2,
                                                    "minimum": 0
                                                },
                                                "timeouts": {
                                                    "maximum": 254,
                                                    "type": "integer",
                                                    "default": 7,
                                                    "minimum": 0
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "active": {
                                    "properties": {
                                        "req_headers": {
                                            "minItems": 1,
                                            "type": "array",
                                            "items": {
                                                "uniqueItems": true,
                                                "type": "string"
                                            }
                                        },
                                        "type": {
                                            "enum": [
                                                "http",
                                                "https",
                                                "tcp"
                                            ],
                                            "default": "http",
                                            "type": "string"
                                        },
                                        "healthy": {
                                            "properties": {
                                                "successes": {
                                                    "maximum": 254,
                                                    "type": "integer",
                                                    "default": 2,
                                                    "minimum": 1
                                                },
                                                "http_statuses": {
                                                    "type": "array",
                                                    "items": {
                                                        "maximum": 599,
                                                        "type": "integer",
                                                        "minimum": 200
                                                    },
                                                    "minItems": 1,
                                                    "default": [
                                                        200,
                                                        302
                                                    ],
                                                    "uniqueItems": true
                                                },
                                                "interval": {
                                                    "type": "integer",
                                                    "default": 1,
                                                    "minimum": 1
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "unhealthy": {
                                            "properties": {
                                                "http_statuses": {
                                                    "type": "array",
                                                    "items": {
                                                        "maximum": 599,
                                                        "type": "integer",
                                                        "minimum": 200
                                                    },
                                                    "minItems": 1,
                                                    "default": [
                                                        429,
                                                        404,
                                                        500,
                                                        501,
                                                        502,
                                                        503,
                                                        504,
                                                        505
                                                    ],
                                                    "uniqueItems": true
                                                },
                                                "timeouts": {
                                                    "maximum": 254,
                                                    "type": "integer",
                                                    "default": 3,
                                                    "minimum": 1
                                                },
                                                "http_failures": {
                                                    "maximum": 254,
                                                    "type": "integer",
                                                    "default": 5,
                                                    "minimum": 1
                                                },
                                                "tcp_failures": {
                                                    "maximum": 254,
                                                    "type": "integer",
                                                    "default": 2,
                                                    "minimum": 1
                                                },
                                                "interval": {
                                                    "type": "integer",
                                                    "default": 1,
                                                    "minimum": 1
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "port": {
                                            "maximum": 65535,
                                            "type": "integer",
                                            "minimum": 1
                                        },
                                        "http_path": {
                                            "default": "/",
                                            "type": "string"
                                        },
                                        "host": {
                                            "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
                                            "type": "string"
                                        },
                                        "timeout": {
                                            "default": 1,
                                            "type": "number"
                                        },
                                        "concurrency": {
                                            "default": 10,
                                            "type": "integer"
                                        },
                                        "https_verify_certificate": {
                                            "default": true,
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "anyOf": [
                                {
                                    "required": [
                                        "active"
                                    ]
                                },
                                {
                                    "required": [
                                        "active",
                                        "passive"
                                    ]
                                }
                            ]
                        },
                        "scheme": {
                            "enum": [
                                "grpc",
                                "grpcs",
                                "http",
                                "https",
                                "tcp",
                                "tls",
                                "udp",
                                "kafka"
                            ],
                            "default": "http",
                            "description": "The scheme of the upstream. For L7 proxy, it can be one of grpc/grpcs/http/https. For L4 proxy, it can be one of tcp/tls/udp. For specific protocols, it can be kafka."
                        },
                        "discovery_args": {
                            "properties": {
                                "group_name": {
                                    "type": "string",
                                    "description": "group name"
                                },
                                "namespace_id": {
                                    "type": "string",
                                    "description": "namespace id"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "oneOf": [
                        {
                            "required": [
                                "nodes"
                            ]
                        },
                        {
                            "required": [
                                "service_name",
                                "discovery_type"
                            ]
                        }
                    ]
                },
                "protocol": {
                    "required": [
                        "name"
                    ],
                    "type": "object",
                    "properties": {
                        "logger": {
                            "items": {
                                "properties": {
                                    "conf": {
                                        "type": "object",
                                        "description": "logger plugin configuration"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "filter": {
                                        "type": "array",
                                        "description": "logger filter rules"
                                    }
                                },
                                "dependencies": {
                                    "name": [
                                        "conf"
                                    ]
                                }
                            },
                            "type": "array"
                        },
                        "conf": {
                            "type": "object",
                            "description": "protocol-specific configuration"
                        },
                        "superior_id": {
                            "anyOf": [
                                {
                                    "maxLength": 64,
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9-_.]+$",
                                    "minLength": 1
                                },
                                {
                                    "minimum": 1,
                                    "type": "integer"
                                }
                            ]
                        },
                        "name": {
                            "type": "string"
                        }
                    }
                },
                "server_port": {
                    "type": "integer",
                    "description": "server port"
                },
                "plugins": {
                    "type": "object"
                },
                "upstream_id": {
                    "anyOf": [
                        {
                            "maxLength": 64,
                            "type": "string",
                            "pattern": "^[a-zA-Z0-9-_.]+$",
                            "minLength": 1
                        },
                        {
                            "minimum": 1,
                            "type": "integer"
                        }
                    ]
                },
                "desc": {
                    "maxLength": 256,
                    "type": "string"
                },
                "server_addr": {
                    "type": "string",
                    "description": "server IP",
                    "anyOf": [
                        {
                            "format": "ipv4",
                            "type": "string",
                            "title": "IPv4"
                        },
                        {
                            "pattern": "^([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])/([12]?[0-9]|3[0-2])$",
                            "type": "string",
                            "title": "IPv4/CIDR"
                        },
                        {
                            "format": "ipv6",
                            "type": "string",
                            "title": "IPv6"
                        },
                        {
                            "pattern": "^([a-fA-F0-9]{0,4}:){1,8}(:[a-fA-F0-9]{0,4}){0,8}([a-fA-F0-9]{0,4})?/[0-9]{1,3}$",
                            "type": "string",
                            "title": "IPv6/CIDR"
                        }
                    ]
                },
                "update_time": {
                    "type": "integer"
                },
                "sni": {
                    "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
                    "type": "string",
                    "description": "server name indication"
                },
                "remote_addr": {
                    "type": "string",
                    "description": "client IP",
                    "anyOf": [
                        {
                            "format": "ipv4",
                            "type": "string",
                            "title": "IPv4"
                        },
                        {
                            "pattern": "^([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])/([12]?[0-9]|3[0-2])$",
                            "type": "string",
                            "title": "IPv4/CIDR"
                        },
                        {
                            "format": "ipv6",
                            "type": "string",
                            "title": "IPv6"
                        },
                        {
                            "pattern": "^([a-fA-F0-9]{0,4}:){1,8}(:[a-fA-F0-9]{0,4}){0,8}([a-fA-F0-9]{0,4})?/[0-9]{1,3}$",
                            "type": "string",
                            "title": "IPv6/CIDR"
                        }
                    ]
                },
                "id": {
                    "anyOf": [
                        {
                            "maxLength": 64,
                            "type": "string",
                            "pattern": "^[a-zA-Z0-9-_.]+$",
                            "minLength": 1
                        },
                        {
                            "minimum": 1,
                            "type": "integer"
                        }
                    ]
                }
            },
            "type": "object"
        }
    },
    "plugins": {
        "real-ip": {
            "schema": {
                "required": [
                    "source"
                ],
                "type": "object",
                "properties": {
                    "recursive": {
                        "default": false,
                        "type": "boolean"
                    },
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    },
                    "source": {
                        "minLength": 1,
                        "type": "string"
                    },
                    "trusted_addresses": {
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "anyOf": [
                                {
                                    "format": "ipv4",
                                    "type": "string",
                                    "title": "IPv4"
                                },
                                {
                                    "pattern": "^([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])/([12]?[0-9]|3[0-2])$",
                                    "type": "string",
                                    "title": "IPv4/CIDR"
                                },
                                {
                                    "format": "ipv6",
                                    "type": "string",
                                    "title": "IPv6"
                                },
                                {
                                    "pattern": "^([a-fA-F0-9]{0,4}:){1,8}(:[a-fA-F0-9]{0,4}){0,8}([a-fA-F0-9]{0,4})?/[0-9]{1,3}$",
                                    "type": "string",
                                    "title": "IPv6/CIDR"
                                }
                            ]
                        }
                    }
                },
                "$comment": "this is a mark for our injected plugin schema"
            },
            "version": 0.1,
            "priority": 23000
        },
        "kafka-logger": {
            "priority": 403,
            "schema": {
                "$comment": "this is a mark for our injected plugin schema",
                "type": "object",
                "properties": {
                    "log_format": {
                        "type": "object"
                    },
                    "timeout": {
                        "type": "integer",
                        "default": 3,
                        "minimum": 1
                    },
                    "producer_batch_size": {
                        "type": "integer",
                        "default": 1048576,
                        "minimum": 0
                    },
                    "producer_max_buffering": {
                        "type": "integer",
                        "default": 50000,
                        "minimum": 1
                    },
                    "producer_time_linger": {
                        "type": "integer",
                        "default": 1,
                        "minimum": 1
                    },
                    "meta_refresh_interval": {
                        "type": "integer",
                        "default": 30,
                        "minimum": 1
                    },
                    "key": {
                        "type": "string"
                    },
                    "include_req_body": {
                        "default": false,
                        "type": "boolean"
                    },
                    "include_req_body_expr": {
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "type": "array"
                        }
                    },
                    "broker_list": {
                        "patternProperties": {
                            ".*": {
                                "maximum": 65535,
                                "type": "integer",
                                "description": "the port of kafka broker",
                                "minimum": 1
                            }
                        },
                        "minProperties": 1,
                        "type": "object"
                    },
                    "brokers": {
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "required": [
                                "host",
                                "port"
                            ],
                            "type": "object",
                            "properties": {
                                "sasl_config": {
                                    "required": [
                                        "user",
                                        "password"
                                    ],
                                    "description": "sasl config",
                                    "properties": {
                                        "user": {
                                            "description": "user",
                                            "type": "string"
                                        },
                                        "mechanism": {
                                            "type": "string",
                                            "default": "PLAIN",
                                            "enum": [
                                                "PLAIN"
                                            ]
                                        },
                                        "password": {
                                            "description": "password",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "port": {
                                    "maximum": 65535,
                                    "type": "integer",
                                    "description": "the port of kafka broker",
                                    "minimum": 1
                                },
                                "host": {
                                    "description": "the host of kafka broker",
                                    "type": "string"
                                }
                            }
                        },
                        "uniqueItems": true
                    },
                    "producer_batch_num": {
                        "type": "integer",
                        "default": 200,
                        "minimum": 1
                    },
                    "max_retry_count": {
                        "type": "integer",
                        "default": 0,
                        "minimum": 0
                    },
                    "retry_delay": {
                        "type": "integer",
                        "default": 1,
                        "minimum": 0
                    },
                    "buffer_duration": {
                        "type": "integer",
                        "default": 60,
                        "minimum": 1
                    },
                    "name": {
                        "default": "kafka logger",
                        "type": "string"
                    },
                    "cluster_name": {
                        "type": "integer",
                        "default": 1,
                        "minimum": 1
                    },
                    "meta_format": {
                        "type": "string",
                        "default": "default",
                        "enum": [
                            "default",
                            "origin"
                        ]
                    },
                    "batch_max_size": {
                        "type": "integer",
                        "default": 1000,
                        "minimum": 1
                    },
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    },
                    "include_resp_body_expr": {
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "type": "array"
                        }
                    },
                    "producer_type": {
                        "type": "string",
                        "default": "async",
                        "enum": [
                            "async",
                            "sync"
                        ]
                    },
                    "kafka_topic": {
                        "type": "string"
                    },
                    "include_resp_body": {
                        "default": false,
                        "type": "boolean"
                    },
                    "inactive_timeout": {
                        "type": "integer",
                        "default": 5,
                        "minimum": 1
                    },
                    "required_acks": {
                        "type": "integer",
                        "default": 1,
                        "enum": [
                            0,
                            1,
                            -1
                        ]
                    }
                },
                "oneOf": [
                    {
                        "required": [
                            "broker_list",
                            "kafka_topic"
                        ]
                    },
                    {
                        "required": [
                            "brokers",
                            "kafka_topic"
                        ]
                    }
                ]
            },
            "metadata_schema": {
                "properties": {
                    "log_format": {
                        "default": {
                            "@timestamp": "$time_iso8601",
                            "client_ip": "$remote_addr",
                            "host": "$host"
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "version": 0.1
        },
        "tcp-logger": {
            "version": 0.1,
            "schema": {
                "required": [
                    "host",
                    "port"
                ],
                "type": "object",
                "properties": {
                    "log_format": {
                        "type": "object"
                    },
                    "timeout": {
                        "type": "integer",
                        "default": 1000,
                        "minimum": 1
                    },
                    "max_retry_count": {
                        "type": "integer",
                        "default": 0,
                        "minimum": 0
                    },
                    "tls": {
                        "default": false,
                        "type": "boolean"
                    },
                    "buffer_duration": {
                        "type": "integer",
                        "default": 60,
                        "minimum": 1
                    },
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    },
                    "batch_max_size": {
                        "type": "integer",
                        "default": 1000,
                        "minimum": 1
                    },
                    "port": {
                        "minimum": 0,
                        "type": "integer"
                    },
                    "include_req_body": {
                        "default": false,
                        "type": "boolean"
                    },
                    "host": {
                        "type": "string"
                    },
                    "retry_delay": {
                        "type": "integer",
                        "default": 1,
                        "minimum": 0
                    },
                    "tls_options": {
                        "type": "string"
                    },
                    "inactive_timeout": {
                        "type": "integer",
                        "default": 5,
                        "minimum": 1
                    },
                    "name": {
                        "default": "tcp logger",
                        "type": "string"
                    }
                },
                "$comment": "this is a mark for our injected plugin schema"
            },
            "metadata_schema": {
                "properties": {
                    "log_format": {
                        "default": {
                            "@timestamp": "$time_iso8601",
                            "client_ip": "$remote_addr",
                            "host": "$host"
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "priority": 405
        },
        "test-plugin": {
            "priority": 12,
            "schema": {
                "properties": {
                    "clusters": {
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "description": "集群id"
                                },
                                "host": {
                                    "type": "string",
                                    "description": "集群域名"
                                },
                                "desc": {
                                    "type": "string",
                                    "description": "集群描述"
                                },
                                "tag": {
                                    "type": "string",
                                    "description": "集群标志"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            }
                        },
                        "type": "object"
                    },
                    "header": {
                        "type": "string",
                        "description": "header to check."
                    }
                },
                "required": [
                    "header",
                    "clusters"
                ],
                "$comment": "this is a mark for our injected plugin schema",
                "type": "object"
            },
            "version": 0.1
        },
        "rocketmq-logger": {
            "priority": 402,
            "schema": {
                "required": [
                    "nameserver_list",
                    "topic"
                ],
                "type": "object",
                "encrypt_fields": [
                    "secret_key"
                ],
                "properties": {
                    "log_format": {
                        "type": "object"
                    },
                    "timeout": {
                        "type": "integer",
                        "default": 3,
                        "minimum": 1
                    },
                    "nameserver_list": {
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tag": {
                        "type": "string"
                    },
                    "use_tls": {
                        "default": false,
                        "type": "boolean"
                    },
                    "access_key": {
                        "default": "",
                        "type": "string"
                    },
                    "include_req_body_expr": {
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "type": "array"
                        }
                    },
                    "name": {
                        "default": "rocketmq logger",
                        "type": "string"
                    },
                    "max_retry_count": {
                        "type": "integer",
                        "default": 0,
                        "minimum": 0
                    },
                    "retry_delay": {
                        "type": "integer",
                        "default": 1,
                        "minimum": 0
                    },
                    "buffer_duration": {
                        "type": "integer",
                        "default": 60,
                        "minimum": 1
                    },
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    },
                    "meta_format": {
                        "type": "string",
                        "default": "default",
                        "enum": [
                            "default",
                            "origin"
                        ]
                    },
                    "topic": {
                        "type": "string"
                    },
                    "secret_key": {
                        "default": "",
                        "type": "string"
                    },
                    "include_resp_body_expr": {
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "type": "array"
                        }
                    },
                    "key": {
                        "type": "string"
                    },
                    "include_req_body": {
                        "default": false,
                        "type": "boolean"
                    },
                    "include_resp_body": {
                        "default": false,
                        "type": "boolean"
                    },
                    "inactive_timeout": {
                        "type": "integer",
                        "default": 5,
                        "minimum": 1
                    },
                    "batch_max_size": {
                        "type": "integer",
                        "default": 1000,
                        "minimum": 1
                    }
                },
                "$comment": "this is a mark for our injected plugin schema"
            },
            "metadata_schema": {
                "properties": {
                    "log_format": {
                        "default": {
                            "@timestamp": "$time_iso8601",
                            "client_ip": "$remote_addr",
                            "host": "$host"
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "version": 0.1
        },
        "splunk-hec-logging": {
            "version": 0.1,
            "schema": {
                "required": [
                    "endpoint"
                ],
                "type": "object",
                "properties": {
                    "log_format": {
                        "type": "object"
                    },
                    "max_retry_count": {
                        "type": "integer",
                        "default": 0,
                        "minimum": 0
                    },
                    "retry_delay": {
                        "type": "integer",
                        "default": 1,
                        "minimum": 0
                    },
                    "buffer_duration": {
                        "type": "integer",
                        "default": 60,
                        "minimum": 1
                    },
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    },
                    "ssl_verify": {
                        "default": true,
                        "type": "boolean"
                    },
                    "name": {
                        "default": "splunk-hec-logging",
                        "type": "string"
                    },
                    "batch_max_size": {
                        "type": "integer",
                        "default": 1000,
                        "minimum": 1
                    },
                    "inactive_timeout": {
                        "type": "integer",
                        "default": 5,
                        "minimum": 1
                    },
                    "endpoint": {
                        "required": [
                            "uri",
                            "token"
                        ],
                        "type": "object",
                        "properties": {
                            "channel": {
                                "type": "string"
                            },
                            "uri": {
                                "pattern": "^[^\/]+:\/\/([\\da-zA-Z.-]+|\\[[\\da-fA-F:]+\\])(:\\d+)?",
                                "type": "string"
                            },
                            "timeout": {
                                "type": "integer",
                                "default": 10,
                                "minimum": 1
                            },
                            "token": {
                                "type": "string"
                            }
                        }
                    }
                },
                "$comment": "this is a mark for our injected plugin schema"
            },
            "metadata_schema": {
                "properties": {
                    "log_format": {
                        "default": {
                            "@timestamp": "$time_iso8601",
                            "client_ip": "$remote_addr",
                            "host": "$host"
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "priority": 409
        },
        "echo": {
            "schema": {
                "type": "object",
                "anyOf": [
                    {
                        "required": [
                            "before_body"
                        ]
                    },
                    {
                        "required": [
                            "body"
                        ]
                    },
                    {
                        "required": [
                            "after_body"
                        ]
                    }
                ],
                "minProperties": 1,
                "properties": {
                    "after_body": {
                        "type": "string",
                        "description": "body after the modification of filter phase."
                    },
                    "headers": {
                        "type": "object",
                        "minProperties": 1,
                        "description": "new headers for response"
                    },
                    "body": {
                        "type": "string",
                        "description": "body to replace upstream response."
                    },
                    "before_body": {
                        "type": "string",
                        "description": "body before the filter phase."
                    },
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    }
                },
                "$comment": "this is a mark for our injected plugin schema"
            },
            "version": 0.1,
            "priority": 412
        },
        "serverless-post-function": {
            "schema": {
                "required": [
                    "functions"
                ],
                "type": "object",
                "properties": {
                    "phase": {
                        "type": "string",
                        "default": "access",
                        "enum": [
                            "rewrite",
                            "access",
                            "header_filter",
                            "body_filter",
                            "log",
                            "before_proxy"
                        ]
                    },
                    "functions": {
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    }
                },
                "$comment": "this is a mark for our injected plugin schema"
            },
            "priority": -2000,
            "version": 0.1
        },
        "opa": {
            "schema": {
                "required": [
                    "host",
                    "policy"
                ],
                "type": "object",
                "properties": {
                    "with_route": {
                        "default": false,
                        "type": "boolean"
                    },
                    "timeout": {
                        "type": "integer",
                        "default": 3000,
                        "minimum": 1,
                        "maximum": 60000,
                        "description": "timeout in milliseconds"
                    },
                    "with_consumer": {
                        "default": false,
                        "type": "boolean"
                    },
                    "keepalive": {
                        "default": true,
                        "type": "boolean"
                    },
                    "keepalive_pool": {
                        "type": "integer",
                        "default": 5,
                        "minimum": 1
                    },
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    },
                    "keepalive_timeout": {
                        "type": "integer",
                        "default": 60000,
                        "minimum": 1000
                    },
                    "host": {
                        "type": "string"
                    },
                    "policy": {
                        "type": "string"
                    },
                    "with_service": {
                        "default": false,
                        "type": "boolean"
                    },
                    "ssl_verify": {
                        "default": true,
                        "type": "boolean"
                    }
                },
                "$comment": "this is a mark for our injected plugin schema"
            },
            "version": 0.1,
            "priority": 2001
        },
        "limit-conn": {
            "schema": {
                "required": [
                    "conn",
                    "burst",
                    "default_conn_delay",
                    "key"
                ],
                "type": "object",
                "properties": {
                    "burst": {
                        "minimum": 0,
                        "type": "integer"
                    },
                    "conn": {
                        "exclusiveMinimum": 0,
                        "type": "integer"
                    },
                    "allow_degradation": {
                        "default": false,
                        "type": "boolean"
                    },
                    "key": {
                        "type": "string"
                    },
                    "rejected_code": {
                        "maximum": 599,
                        "type": "integer",
                        "default": 503,
                        "minimum": 200
                    },
                    "rejected_msg": {
                        "minLength": 1,
                        "type": "string"
                    },
                    "key_type": {
                        "enum": [
                            "var",
                            "var_combination"
                        ],
                        "default": "var",
                        "type": "string"
                    },
                    "default_conn_delay": {
                        "exclusiveMinimum": 0,
                        "type": "number"
                    },
                    "only_use_default_delay": {
                        "default": false,
                        "type": "boolean"
                    },
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    }
                },
                "$comment": "this is a mark for our injected plugin schema"
            },
            "version": 0.1,
            "priority": 1003
        },
        "consumer-restriction": {
            "schema": {
                "$comment": "this is a mark for our injected plugin schema",
                "type": "object",
                "properties": {
                    "rejected_code": {
                        "type": "integer",
                        "default": 403,
                        "minimum": 200
                    },
                    "type": {
                        "enum": [
                            "consumer_name",
                            "service_id",
                            "route_id",
                            "consumer_group_id"
                        ],
                        "default": "consumer_name",
                        "type": "string"
                    },
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    },
                    "rejected_msg": {
                        "type": "string"
                    },
                    "blacklist": {
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "whitelist": {
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "allowed_by_methods": {
                        "items": {
                            "properties": {
                                "methods": {
                                    "minItems": 1,
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "enum": [
                                            "GET",
                                            "POST",
                                            "PUT",
                                            "DELETE",
                                            "PATCH",
                                            "HEAD",
                                            "OPTIONS",
                                            "CONNECT",
                                            "TRACE",
                                            "PURGE"
                                        ],
                                        "description": "HTTP method"
                                    }
                                },
                                "user": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "anyOf": [
                    {
                        "required": [
                            "blacklist"
                        ]
                    },
                    {
                        "required": [
                            "whitelist"
                        ]
                    },
                    {
                        "required": [
                            "allowed_by_methods"
                        ]
                    }
                ]
            },
            "version": 0.1,
            "priority": 2400
        },
        "http-logger": {
            "priority": 410,
            "schema": {
                "required": [
                    "uri"
                ],
                "type": "object",
                "properties": {
                    "log_format": {
                        "type": "object"
                    },
                    "auth_header": {
                        "type": "string"
                    },
                    "concat_method": {
                        "type": "string",
                        "default": "json",
                        "enum": [
                            "json",
                            "new_line"
                        ]
                    },
                    "retry_delay": {
                        "type": "integer",
                        "default": 1,
                        "minimum": 0
                    },
                    "buffer_duration": {
                        "type": "integer",
                        "default": 60,
                        "minimum": 1
                    },
                    "batch_max_size": {
                        "type": "integer",
                        "default": 1000,
                        "minimum": 1
                    },
                    "include_resp_body_expr": {
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "type": "array"
                        }
                    },
                    "uri": {
                        "pattern": "^[^\/]+:\/\/([\\da-zA-Z.-]+|\\[[\\da-fA-F:]+\\])(:\\d+)?",
                        "type": "string"
                    },
                    "max_retry_count": {
                        "type": "integer",
                        "default": 0,
                        "minimum": 0
                    },
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    },
                    "include_req_body": {
                        "default": false,
                        "type": "boolean"
                    },
                    "ssl_verify": {
                        "default": false,
                        "type": "boolean"
                    },
                    "timeout": {
                        "type": "integer",
                        "default": 3,
                        "minimum": 1
                    },
                    "include_resp_body": {
                        "default": false,
                        "type": "boolean"
                    },
                    "inactive_timeout": {
                        "type": "integer",
                        "default": 5,
                        "minimum": 1
                    },
                    "name": {
                        "default": "http logger",
                        "type": "string"
                    }
                },
                "$comment": "this is a mark for our injected plugin schema"
            },
            "metadata_schema": {
                "properties": {
                    "log_format": {
                        "default": {
                            "@timestamp": "$time_iso8601",
                            "client_ip": "$remote_addr",
                            "host": "$host"
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "version": 0.1
        },
        "prometheus": {
            "schema": {
                "type": "object",
                "properties": {
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    },
                    "prefer_name": {
                        "default": false,
                        "type": "boolean"
                    }
                },
                "$comment": "this is a mark for our injected plugin schema"
            },
            "priority": 500,
            "version": 0.2
        },
        "mocking": {
            "schema": {
                "$comment": "this is a mark for our injected plugin schema",
                "type": "object",
                "properties": {
                    "response_status": {
                        "type": "integer",
                        "default": 200,
                        "minimum": 100
                    },
                    "response_example": {
                        "type": "string"
                    },
                    "delay": {
                        "default": 0,
                        "type": "integer"
                    },
                    "content_type": {
                        "default": "application/json;charset=utf8",
                        "type": "string"
                    },
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    },
                    "with_mock_header": {
                        "default": true,
                        "type": "boolean"
                    },
                    "response_schema": {
                        "type": "object"
                    }
                },
                "anyOf": [
                    {
                        "required": [
                            "response_example"
                        ]
                    },
                    {
                        "required": [
                            "response_schema"
                        ]
                    }
                ]
            },
            "version": 0.1,
            "priority": 10900
        },
        "zipkin": {
            "schema": {
                "required": [
                    "endpoint",
                    "sample_ratio"
                ],
                "type": "object",
                "properties": {
                    "server_addr": {
                        "pattern": "^[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}$",
                        "description": "default is $server_addr, you can specify your external ip address",
                        "type": "string"
                    },
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    },
                    "sample_ratio": {
                        "maximum": 1,
                        "type": "number",
                        "minimum": 1e-05
                    },
                    "service_name": {
                        "description": "service name for zipkin reporter",
                        "default": "APISIX",
                        "type": "string"
                    },
                    "span_version": {
                        "default": 2,
                        "enum": [
                            1,
                            2
                        ]
                    },
                    "endpoint": {
                        "type": "string"
                    }
                },
                "$comment": "this is a mark for our injected plugin schema"
            },
            "priority": 12011,
            "version": 0.1
        },
        "request-validation": {
            "version": 0.1,
            "schema": {
                "$comment": "this is a mark for our injected plugin schema",
                "type": "object",
                "properties": {
                    "rejected_code": {
                        "maximum": 599,
                        "type": "integer",
                        "default": 400,
                        "minimum": 200
                    },
                    "rejected_msg": {
                        "maxLength": 256,
                        "type": "string",
                        "minLength": 1
                    },
                    "header_schema": {
                        "type": "object"
                    },
                    "body_schema": {
                        "type": "object"
                    },
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    }
                },
                "anyOf": [
                    {
                        "required": [
                            "header_schema"
                        ]
                    },
                    {
                        "required": [
                            "body_schema"
                        ]
                    }
                ]
            },
            "type": "validation",
            "priority": 2800
        },
        "csrf": {
            "schema": {
                "required": [
                    "key"
                ],
                "type": "object",
                "encrypt_fields": [
                    "key"
                ],
                "properties": {
                    "expires": {
                        "type": "integer",
                        "default": 7200,
                        "description": "expires time(s) for csrf token"
                    },
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    },
                    "name": {
                        "type": "string",
                        "default": "apisix-csrf-token",
                        "description": "the csrf token name"
                    },
                    "key": {
                        "type": "string",
                        "description": "use to generate csrf token"
                    }
                },
                "$comment": "this is a mark for our injected plugin schema"
            },
            "version": 0.1,
            "priority": 2980
        },
        "kafka-proxy": {
            "schema": {
                "encrypt_fields": [
                    "sasl.password"
                ],
                "type": "object",
                "properties": {
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    },
                    "sasl": {
                        "required": [
                            "username",
                            "password"
                        ],
                        "type": "object",
                        "properties": {
                            "password": {
                                "type": "string"
                            },
                            "username": {
                                "type": "string"
                            }
                        }
                    }
                },
                "$comment": "this is a mark for our injected plugin schema"
            },
            "version": 0.1,
            "priority": 508
        },
        "hmac-auth": {
            "consumer_schema": {
                "required": [
                    "access_key",
                    "secret_key"
                ],
                "type": "object",
                "title": "work with consumer object",
                "encrypt_fields": [
                    "secret_key"
                ],
                "properties": {
                    "clock_skew": {
                        "default": 0,
                        "type": "integer"
                    },
                    "signed_headers": {
                        "items": {
                            "maxLength": 50,
                            "type": "string",
                            "minLength": 1
                        },
                        "type": "array"
                    },
                    "keep_headers": {
                        "type": "boolean",
                        "title": "whether to keep the http request header",
                        "default": false
                    },
                    "encode_uri_params": {
                        "type": "boolean",
                        "title": "Whether to escape the uri parameter",
                        "default": true
                    },
                    "validate_request_body": {
                        "type": "boolean",
                        "title": "A boolean value telling the plugin to enable body validation",
                        "default": false
                    },
                    "algorithm": {
                        "enum": [
                            "hmac-sha1",
                            "hmac-sha256",
                            "hmac-sha512"
                        ],
                        "default": "hmac-sha256",
                        "type": "string"
                    },
                    "max_req_body": {
                        "type": "integer",
                        "title": "Max request body size",
                        "default": 524288
                    },
                    "access_key": {
                        "maxLength": 256,
                        "type": "string",
                        "minLength": 1
                    },
                    "secret_key": {
                        "maxLength": 256,
                        "type": "string",
                        "minLength": 1
                    }
                }
            },
            "priority": 2530,
            "type": "auth",
            "schema": {
                "properties": {
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object",
                "title": "work with route or service object",
                "$comment": "this is a mark for our injected plugin schema"
            },
            "version": 0.1
        },
        "wolf-rbac": {
            "priority": 2555,
            "type": "auth",
            "schema": {
                "type": "object",
                "properties": {
                    "appid": {
                        "default": "unset",
                        "type": "string"
                    },
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    },
                    "server": {
                        "default": "http://127.0.0.1:12180",
                        "type": "string"
                    },
                    "header_prefix": {
                        "default": "X-",
                        "type": "string"
                    }
                },
                "$comment": "this is a mark for our injected plugin schema"
            },
            "version": 0.1
        },
        "file-logger": {
            "priority": 399,
            "schema": {
                "required": [
                    "path"
                ],
                "type": "object",
                "properties": {
                    "log_format": {
                        "type": "object"
                    },
                    "path": {
                        "type": "string"
                    },
                    "include_resp_body_expr": {
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "type": "array"
                        }
                    },
                    "include_resp_body": {
                        "default": false,
                        "type": "boolean"
                    },
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    }
                },
                "$comment": "this is a mark for our injected plugin schema"
            },
            "metadata_schema": {
                "properties": {
                    "log_format": {
                        "default": {
                            "@timestamp": "$time_iso8601",
                            "client_ip": "$remote_addr",
                            "host": "$host"
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "version": 0.1
        },
        "proxy-cache": {
            "schema": {
                "type": "object",
                "properties": {
                    "hide_cache_headers": {
                        "default": false,
                        "type": "boolean"
                    },
                    "cache_control": {
                        "default": false,
                        "type": "boolean"
                    },
                    "cache_bypass": {
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "pattern": "(^[^\\$].+$|^\\$[0-9a-zA-Z_]+$)",
                            "type": "string"
                        }
                    },
                    "no_cache": {
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "pattern": "(^[^\\$].+$|^\\$[0-9a-zA-Z_]+$)",
                            "type": "string"
                        }
                    },
                    "cache_ttl": {
                        "type": "integer",
                        "default": 300,
                        "minimum": 1
                    },
                    "cache_zone": {
                        "maxLength": 100,
                        "type": "string",
                        "default": "disk_cache_one",
                        "minLength": 1
                    },
                    "cache_strategy": {
                        "enum": [
                            "disk",
                            "memory"
                        ],
                        "default": "disk",
                        "type": "string"
                    },
                    "cache_key": {
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "pattern": "(^[^\\$].+$|^\\$[0-9a-zA-Z_]+$)",
                            "type": "string",
                            "description": "a key for caching"
                        },
                        "default": [
                            "$host",
                            "$request_uri"
                        ]
                    },
                    "cache_http_status": {
                        "type": "array",
                        "items": {
                            "maximum": 599,
                            "type": "integer",
                            "description": "http response status",
                            "minimum": 200
                        },
                        "minItems": 1,
                        "default": [
                            200,
                            301,
                            404
                        ],
                        "uniqueItems": true
                    },
                    "cache_method": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "GET",
                                "POST",
                                "HEAD"
                            ],
                            "description": "supported http method"
                        },
                        "minItems": 1,
                        "default": [
                            "GET",
                            "HEAD"
                        ],
                        "uniqueItems": true
                    },
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    }
                },
                "$comment": "this is a mark for our injected plugin schema"
            },
            "priority": 1009,
            "version": 0.2
        },
        "syslog": {
            "priority": 401,
            "schema": {
                "required": [
                    "host",
                    "port"
                ],
                "type": "object",
                "properties": {
                    "log_format": {
                        "type": "object"
                    },
                    "timeout": {
                        "type": "integer",
                        "default": 3000,
                        "minimum": 1
                    },
                    "tls": {
                        "default": false,
                        "type": "boolean"
                    },
                    "port": {
                        "type": "integer"
                    },
                    "include_req_body": {
                        "default": false,
                        "type": "boolean"
                    },
                    "name": {
                        "default": "sys logger",
                        "type": "string"
                    },
                    "max_retry_count": {
                        "type": "integer",
                        "default": 0,
                        "minimum": 0
                    },
                    "pool_size": {
                        "type": "integer",
                        "default": 5,
                        "minimum": 5
                    },
                    "buffer_duration": {
                        "type": "integer",
                        "default": 60,
                        "minimum": 1
                    },
                    "batch_max_size": {
                        "type": "integer",
                        "default": 1000,
                        "minimum": 1
                    },
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    },
                    "flush_limit": {
                        "type": "integer",
                        "default": 4096,
                        "minimum": 1
                    },
                    "host": {
                        "type": "string"
                    },
                    "drop_limit": {
                        "default": 1048576,
                        "type": "integer"
                    },
                    "sock_type": {
                        "type": "string",
                        "default": "tcp",
                        "enum": [
                            "tcp",
                            "udp"
                        ]
                    },
                    "inactive_timeout": {
                        "type": "integer",
                        "default": 5,
                        "minimum": 1
                    },
                    "retry_delay": {
                        "type": "integer",
                        "default": 1,
                        "minimum": 0
                    }
                },
                "$comment": "this is a mark for our injected plugin schema"
            },
            "metadata_schema": {
                "properties": {
                    "log_format": {
                        "default": {
                            "@timestamp": "$time_iso8601",
                            "client_ip": "$remote_addr",
                            "host": "$host"
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "version": 0.1
        },
        "proxy-control": {
            "schema": {
                "type": "object",
                "properties": {
                    "request_buffering": {
                        "default": true,
                        "type": "boolean"
                    },
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    }
                },
                "$comment": "this is a mark for our injected plugin schema"
            },
            "version": 0.1,
            "priority": 21990
        },
        "inspect": {
            "schema": {
                "type": "object",
                "properties": {
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    }
                },
                "$comment": "this is a mark for our injected plugin schema"
            },
            "version": 0.1,
            "priority": 200
        },
        "ua-restriction": {
            "schema": {
                "type": "object",
                "properties": {
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    },
                    "message": {
                        "maxLength": 1024,
                        "type": "string",
                        "default": "Not allowed",
                        "minLength": 1
                    },
                    "bypass_missing": {
                        "default": false,
                        "type": "boolean"
                    },
                    "allowlist": {
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    "denylist": {
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "minLength": 1,
                            "type": "string"
                        }
                    }
                },
                "$comment": "this is a mark for our injected plugin schema"
            },
            "version": 0.1,
            "priority": 2999
        },
        "response-rewrite": {
            "schema": {
                "$comment": "this is a mark for our injected plugin schema",
                "type": "object",
                "properties": {
                    "body_base64": {
                        "type": "boolean",
                        "default": false,
                        "description": "whether new body for response need base64 decode before return"
                    },
                    "body": {
                        "type": "string",
                        "description": "new body for response"
                    },
                    "status_code": {
                        "maximum": 598,
                        "type": "integer",
                        "description": "new status code for response",
                        "minimum": 200
                    },
                    "filters": {
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "required": [
                                "regex",
                                "replace"
                            ],
                            "type": "object",
                            "properties": {
                                "options": {
                                    "type": "string",
                                    "default": "jo",
                                    "description": "regex options"
                                },
                                "replace": {
                                    "type": "string",
                                    "description": "regex substitution content"
                                },
                                "regex": {
                                    "type": "string",
                                    "description": "match pattern on response body",
                                    "minLength": 1
                                },
                                "scope": {
                                    "enum": [
                                        "once",
                                        "global"
                                    ],
                                    "type": "string",
                                    "default": "once",
                                    "description": "regex substitution range"
                                }
                            },
                            "description": "filter that modifies response body"
                        },
                        "description": "a group of filters that modify response bodyby replacing one specified string by another"
                    },
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    },
                    "vars": {
                        "type": "array"
                    },
                    "headers": {
                        "anyOf": [
                            {
                                "patternProperties": {
                                    "^[^:]+$": {
                                        "oneOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "number"
                                            }
                                        ]
                                    }
                                },
                                "minProperties": 1,
                                "type": "object"
                            },
                            {
                                "properties": {
                                    "remove": {
                                        "minItems": 1,
                                        "type": "array",
                                        "items": {
                                            "pattern": "^[^:]+$",
                                            "type": "string"
                                        }
                                    },
                                    "add": {
                                        "minItems": 1,
                                        "type": "array",
                                        "items": {
                                            "pattern": "^[^:]+:[^:]+[^/]$",
                                            "type": "string"
                                        }
                                    },
                                    "set": {
                                        "patternProperties": {
                                            "^[^:]+$": {
                                                "oneOf": [
                                                    {
                                                        "type": "string"
                                                    },
                                                    {
                                                        "type": "number"
                                                    }
                                                ]
                                            }
                                        },
                                        "minProperties": 1,
                                        "type": "object"
                                    }
                                }
                            }
                        ],
                        "description": "new headers for response"
                    }
                },
                "dependencies": {
                    "body": {
                        "not": {
                            "required": [
                                "filters"
                            ]
                        }
                    },
                    "filters": {
                        "not": {
                            "required": [
                                "body"
                            ]
                        }
                    }
                }
            },
            "version": 0.1,
            "priority": 899
        },
        "ext-plugin-post-req": {
            "schema": {
                "type": "object",
                "properties": {
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    },
                    "allow_degradation": {
                        "default": false,
                        "type": "boolean"
                    },
                    "conf": {
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "required": [
                                "name",
                                "value"
                            ],
                            "type": "object",
                            "properties": {
                                "value": {
                                    "type": "string"
                                },
                                "name": {
                                    "maxLength": 128,
                                    "type": "string",
                                    "minLength": 1
                                }
                            }
                        }
                    }
                },
                "$comment": "this is a mark for our injected plugin schema"
            },
            "version": 0.1,
            "priority": -3000
        },
        "uri-blocker": {
            "schema": {
                "required": [
                    "block_rules"
                ],
                "type": "object",
                "properties": {
                    "block_rules": {
                        "type": "array",
                        "items": {
                            "maxLength": 4096,
                            "type": "string",
                            "minLength": 1
                        },
                        "uniqueItems": true
                    },
                    "rejected_msg": {
                        "minLength": 1,
                        "type": "string"
                    },
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    },
                    "rejected_code": {
                        "type": "integer",
                        "default": 403,
                        "minimum": 200
                    },
                    "case_insensitive": {
                        "default": false,
                        "type": "boolean"
                    }
                },
                "$comment": "this is a mark for our injected plugin schema"
            },
            "version": 0.1,
            "priority": 2900
        },
        "sls-logger": {
            "schema": {
                "required": [
                    "host",
                    "port",
                    "project",
                    "logstore",
                    "access_key_id",
                    "access_key_secret"
                ],
                "type": "object",
                "encrypt_fields": [
                    "access_key_secret"
                ],
                "properties": {
                    "log_format": {
                        "type": "object"
                    },
                    "timeout": {
                        "type": "integer",
                        "default": 5000,
                        "minimum": 1
                    },
                    "max_retry_count": {
                        "type": "integer",
                        "default": 0,
                        "minimum": 0
                    },
                    "retry_delay": {
                        "type": "integer",
                        "default": 1,
                        "minimum": 0
                    },
                    "buffer_duration": {
                        "type": "integer",
                        "default": 60,
                        "minimum": 1
                    },
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    },
                    "name": {
                        "default": "sls-logger",
                        "type": "string"
                    },
                    "inactive_timeout": {
                        "type": "integer",
                        "default": 5,
                        "minimum": 1
                    },
                    "batch_max_size": {
                        "type": "integer",
                        "default": 1000,
                        "minimum": 1
                    },
                    "port": {
                        "type": "integer"
                    },
                    "include_req_body": {
                        "default": false,
                        "type": "boolean"
                    },
                    "host": {
                        "type": "string"
                    },
                    "access_key_secret": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    },
                    "logstore": {
                        "type": "string"
                    },
                    "access_key_id": {
                        "type": "string"
                    }
                },
                "$comment": "this is a mark for our injected plugin schema"
            },
            "version": 0.1,
            "priority": 406
        },
        "key-auth": {
            "consumer_schema": {
                "required": [
                    "key"
                ],
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string"
                    }
                },
                "encrypt_fields": [
                    "key"
                ]
            },
            "priority": 2500,
            "type": "auth",
            "schema": {
                "type": "object",
                "properties": {
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    },
                    "query": {
                        "default": "apikey",
                        "type": "string"
                    },
                    "hide_credentials": {
                        "default": false,
                        "type": "boolean"
                    },
                    "header": {
                        "default": "apikey",
                        "type": "string"
                    }
                },
                "$comment": "this is a mark for our injected plugin schema"
            },
            "version": 0.1
        },
        "ext-plugin-post-resp": {
            "schema": {
                "type": "object",
                "properties": {
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    },
                    "allow_degradation": {
                        "default": false,
                        "type": "boolean"
                    },
                    "conf": {
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "required": [
                                "name",
                                "value"
                            ],
                            "type": "object",
                            "properties": {
                                "value": {
                                    "type": "string"
                                },
                                "name": {
                                    "maxLength": 128,
                                    "type": "string",
                                    "minLength": 1
                                }
                            }
                        }
                    }
                },
                "$comment": "this is a mark for our injected plugin schema"
            },
            "version": 0.1,
            "priority": -4000
        },
        "forward-auth": {
            "schema": {
                "required": [
                    "uri"
                ],
                "type": "object",
                "properties": {
                    "request_method": {
                        "description": "the method for client to request the authorization service",
                        "type": "string",
                        "default": "GET",
                        "enum": [
                            "GET",
                            "POST"
                        ]
                    },
                    "uri": {
                        "type": "string"
                    },
                    "keepalive": {
                        "default": true,
                        "type": "boolean"
                    },
                    "keepalive_pool": {
                        "type": "integer",
                        "default": 5,
                        "minimum": 1
                    },
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    },
                    "request_headers": {
                        "description": "client request header that will be sent to the authorization service",
                        "type": "array",
                        "default": {},
                        "items": {
                            "type": "string"
                        }
                    },
                    "ssl_verify": {
                        "default": true,
                        "type": "boolean"
                    },
                    "keepalive_timeout": {
                        "type": "integer",
                        "default": 60000,
                        "minimum": 1000
                    },
                    "timeout": {
                        "type": "integer",
                        "default": 3000,
                        "minimum": 1,
                        "maximum": 60000,
                        "description": "timeout in milliseconds"
                    },
                    "client_headers": {
                        "description": "authorization response header that will be sent tothe client when authorizing failed",
                        "type": "array",
                        "default": {},
                        "items": {
                            "type": "string"
                        }
                    },
                    "upstream_headers": {
                        "description": "authorization response header that will be sent to the upstream",
                        "type": "array",
                        "default": {},
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "$comment": "this is a mark for our injected plugin schema"
            },
            "version": 0.1,
            "priority": 2002
        },
        "openfunction": {
            "schema": {
                "required": [
                    "function_uri"
                ],
                "type": "object",
                "properties": {
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    },
                    "timeout": {
                        "type": "integer",
                        "default": 3000,
                        "minimum": 100
                    },
                    "keepalive_timeout": {
                        "type": "integer",
                        "default": 60000,
                        "minimum": 1000
                    },
                    "ssl_verify": {
                        "default": true,
                        "type": "boolean"
                    },
                    "keepalive": {
                        "default": true,
                        "type": "boolean"
                    },
                    "keepalive_pool": {
                        "type": "integer",
                        "default": 5,
                        "minimum": 1
                    },
                    "authorization": {
                        "service_token": {
                            "type": "string"
                        }
                    },
                    "function_uri": {
                        "type": "string"
                    }
                },
                "$comment": "this is a mark for our injected plugin schema"
            },
            "version": 0.1,
            "priority": -1902
        },
        "grpc-web": {
            "schema": {
                "type": "object",
                "properties": {
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    }
                },
                "$comment": "this is a mark for our injected plugin schema"
            },
            "priority": 505,
            "version": 0.1
        },
        "gzip": {
            "schema": {
                "type": "object",
                "properties": {
                    "buffers": {
                        "type": "object",
                        "properties": {
                            "number": {
                                "type": "integer",
                                "default": 32,
                                "minimum": 1
                            },
                            "size": {
                                "type": "integer",
                                "default": 4096,
                                "minimum": 1
                            }
                        },
                        "default": {
                            "number": 32,
                            "size": 4096
                        }
                    },
                    "min_length": {
                        "type": "integer",
                        "default": 20,
                        "minimum": 1
                    },
                    "comp_level": {
                        "maximum": 9,
                        "type": "integer",
                        "default": 1,
                        "minimum": 1
                    },
                    "http_version": {
                        "default": 1.1,
                        "enum": [
                            1.1,
                            1
                        ]
                    },
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    },
                    "vary": {
                        "type": "boolean"
                    },
                    "types": {
                        "default": [
                            "text/html"
                        ],
                        "anyOf": [
                            {
                                "minItems": 1,
                                "type": "array",
                                "items": {
                                    "minLength": 1,
                                    "type": "string"
                                }
                            },
                            {
                                "enum": [
                                    "*"
                                ]
                            }
                        ]
                    }
                },
                "$comment": "this is a mark for our injected plugin schema"
            },
            "version": 0.1,
            "priority": 995
        },
        "skywalking-logger": {
            "version": 0.1,
            "schema": {
                "required": [
                    "endpoint_addr"
                ],
                "type": "object",
                "properties": {
                    "endpoint_addr": {
                        "pattern": "^[^\/]+:\/\/([\\da-zA-Z.-]+|\\[[\\da-fA-F:]+\\])(:\\d+)?",
                        "type": "string"
                    },
                    "timeout": {
                        "type": "integer",
                        "default": 3,
                        "minimum": 1
                    },
                    "max_retry_count": {
                        "type": "integer",
                        "default": 0,
                        "minimum": 0
                    },
                    "retry_delay": {
                        "type": "integer",
                        "default": 1,
                        "minimum": 0
                    },
                    "buffer_duration": {
                        "type": "integer",
                        "default": 60,
                        "minimum": 1
                    },
                    "batch_max_size": {
                        "type": "integer",
                        "default": 1000,
                        "minimum": 1
                    },
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    },
                    "include_req_body": {
                        "default": false,
                        "type": "boolean"
                    },
                    "service_instance_name": {
                        "default": "APISIX Instance Name",
                        "type": "string"
                    },
                    "service_name": {
                        "default": "APISIX",
                        "type": "string"
                    },
                    "log_format": {
                        "type": "object"
                    },
                    "inactive_timeout": {
                        "type": "integer",
                        "default": 5,
                        "minimum": 1
                    },
                    "name": {
                        "default": "skywalking logger",
                        "type": "string"
                    }
                },
                "$comment": "this is a mark for our injected plugin schema"
            },
            "metadata_schema": {
                "properties": {
                    "log_format": {
                        "default": {
                            "@timestamp": "$time_iso8601",
                            "client_ip": "$remote_addr",
                            "host": "$host"
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "priority": 408
        },
        "loggly": {
            "priority": 411,
            "schema": {
                "required": [
                    "customer_token"
                ],
                "type": "object",
                "properties": {
                    "customer_token": {
                        "type": "string"
                    },
                    "include_req_body": {
                        "default": false,
                        "type": "boolean"
                    },
                    "max_retry_count": {
                        "type": "integer",
                        "default": 0,
                        "minimum": 0
                    },
                    "severity_map": {
                        "patternProperties": {
                            "^[1-5][0-9]{2}$": {
                                "type": "string",
                                "enum": [
                                    "WARNING",
                                    "warning",
                                    "DEBUG",
                                    "debug",
                                    "INFO",
                                    "info",
                                    "ALERT",
                                    "alert",
                                    "CRIT",
                                    "crit",
                                    "ERR",
                                    "err",
                                    "NOTICE",
                                    "notice",
                                    "EMEGR",
                                    "emegr"
                                ],
                                "description": "keys are HTTP status code, values are severity"
                            }
                        },
                        "description": "upstream response code vs syslog severity mapping",
                        "type": "object",
                        "additionalProperties": false
                    },
                    "buffer_duration": {
                        "type": "integer",
                        "default": 60,
                        "minimum": 1
                    },
                    "log_format": {
                        "type": "object"
                    },
                    "tags": {
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "pattern": "^(?!tag=)[ -~]*",
                            "type": "string"
                        },
                        "default": [
                            "apisix"
                        ]
                    },
                    "retry_delay": {
                        "type": "integer",
                        "default": 1,
                        "minimum": 0
                    },
                    "batch_max_size": {
                        "type": "integer",
                        "default": 1000,
                        "minimum": 1
                    },
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    },
                    "severity": {
                        "description": "base severity log level",
                        "type": "string",
                        "default": "INFO",
                        "enum": [
                            "WARNING",
                            "warning",
                            "DEBUG",
                            "debug",
                            "INFO",
                            "info",
                            "ALERT",
                            "alert",
                            "CRIT",
                            "crit",
                            "ERR",
                            "err",
                            "NOTICE",
                            "notice",
                            "EMEGR",
                            "emegr"
                        ]
                    },
                    "ssl_verify": {
                        "default": true,
                        "type": "boolean"
                    },
                    "include_resp_body_expr": {
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "type": "array"
                        }
                    },
                    "include_resp_body": {
                        "default": false,
                        "type": "boolean"
                    },
                    "inactive_timeout": {
                        "type": "integer",
                        "default": 5,
                        "minimum": 1
                    },
                    "name": {
                        "default": "loggly",
                        "type": "string"
                    }
                },
                "$comment": "this is a mark for our injected plugin schema"
            },
            "metadata_schema": {
                "properties": {
                    "log_format": {
                        "type": "object"
                    },
                    "port": {
                        "default": 514,
                        "type": "integer"
                    },
                    "host": {
                        "default": "logs-01.loggly.com",
                        "type": "string"
                    },
                    "protocol": {
                        "type": "string",
                        "default": "syslog",
                        "enum": [
                            "syslog",
                            "http",
                            "https"
                        ]
                    },
                    "timeout": {
                        "type": "integer",
                        "default": 5000,
                        "minimum": 1
                    }
                },
                "type": "object"
            },
            "version": 0.1
        },
        "ext-plugin-pre-req": {
            "schema": {
                "type": "object",
                "properties": {
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    },
                    "allow_degradation": {
                        "default": false,
                        "type": "boolean"
                    },
                    "conf": {
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "required": [
                                "name",
                                "value"
                            ],
                            "type": "object",
                            "properties": {
                                "value": {
                                    "type": "string"
                                },
                                "name": {
                                    "maxLength": 128,
                                    "type": "string",
                                    "minLength": 1
                                }
                            }
                        }
                    }
                },
                "$comment": "this is a mark for our injected plugin schema"
            },
            "version": 0.1,
            "priority": 12000
        },
        "tencent-cloud-cls": {
            "priority": 397,
            "schema": {
                "required": [
                    "cls_host",
                    "cls_topic",
                    "secret_id",
                    "secret_key"
                ],
                "type": "object",
                "encrypt_fields": [
                    "secret_key"
                ],
                "properties": {
                    "log_format": {
                        "type": "object"
                    },
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    },
                    "max_retry_count": {
                        "type": "integer",
                        "default": 0,
                        "minimum": 0
                    },
                    "retry_delay": {
                        "type": "integer",
                        "default": 1,
                        "minimum": 0
                    },
                    "buffer_duration": {
                        "type": "integer",
                        "default": 60,
                        "minimum": 1
                    },
                    "include_req_body": {
                        "default": false,
                        "type": "boolean"
                    },
                    "cls_host": {
                        "type": "string"
                    },
                    "cls_topic": {
                        "type": "string"
                    },
                    "secret_id": {
                        "type": "string"
                    },
                    "secret_key": {
                        "type": "string"
                    },
                    "sample_ratio": {
                        "maximum": 1,
                        "type": "number",
                        "default": 1,
                        "minimum": 1e-05
                    },
                    "global_tag": {
                        "type": "object"
                    },
                    "batch_max_size": {
                        "type": "integer",
                        "default": 1000,
                        "minimum": 1
                    },
                    "include_resp_body": {
                        "default": false,
                        "type": "boolean"
                    },
                    "inactive_timeout": {
                        "type": "integer",
                        "default": 5,
                        "minimum": 1
                    },
                    "name": {
                        "default": "tencent-cloud-cls",
                        "type": "string"
                    }
                },
                "$comment": "this is a mark for our injected plugin schema"
            },
            "metadata_schema": {
                "properties": {
                    "log_format": {
                        "default": {
                            "@timestamp": "$time_iso8601",
                            "client_ip": "$remote_addr",
                            "host": "$host"
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "version": 0.1
        },
        "azure-functions": {
            "version": 0.1,
            "schema": {
                "required": [
                    "function_uri"
                ],
                "type": "object",
                "properties": {
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    },
                    "timeout": {
                        "type": "integer",
                        "default": 3000,
                        "minimum": 100
                    },
                    "keepalive_timeout": {
                        "type": "integer",
                        "default": 60000,
                        "minimum": 1000
                    },
                    "ssl_verify": {
                        "default": true,
                        "type": "boolean"
                    },
                    "keepalive": {
                        "default": true,
                        "type": "boolean"
                    },
                    "keepalive_pool": {
                        "type": "integer",
                        "default": 5,
                        "minimum": 1
                    },
                    "authorization": {
                        "properties": {
                            "apikey": {
                                "type": "string"
                            },
                            "clientid": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "function_uri": {
                        "type": "string"
                    }
                },
                "$comment": "this is a mark for our injected plugin schema"
            },
            "metadata_schema": {
                "properties": {
                    "master_apikey": {
                        "default": "",
                        "type": "string"
                    },
                    "master_clientid": {
                        "default": "",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "priority": -1900
        },
        "openid-connect": {
            "schema": {
                "required": [
                    "client_id",
                    "client_secret",
                    "discovery"
                ],
                "type": "object",
                "encrypt_fields": [
                    "client_secret"
                ],
                "properties": {
                    "session": {
                        "required": [
                            "secret"
                        ],
                        "type": "object",
                        "properties": {
                            "secret": {
                                "description": "the key used for the encrypt and HMAC calculation",
                                "type": "string",
                                "minLength": 16
                            }
                        },
                        "additionalProperties": false
                    },
                    "timeout": {
                        "description": "timeout in seconds",
                        "type": "integer",
                        "default": 3,
                        "minimum": 1
                    },
                    "use_pkce": {
                        "type": "boolean",
                        "default": false,
                        "description": "when set to true the PKEC(Proof Key for Code Exchange) will be used."
                    },
                    "set_access_token_header": {
                        "type": "boolean",
                        "default": true,
                        "description": "Whether the access token should be added as a header to the request for downstream"
                    },
                    "access_token_in_authorization_header": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether the access token should be added in the Authorization header as opposed to the X-Access-Token header."
                    },
                    "set_id_token_header": {
                        "type": "boolean",
                        "default": true,
                        "description": "Whether the ID token should be added in the X-ID-Token header to the request for downstream."
                    },
                    "client_secret": {
                        "type": "string"
                    },
                    "set_userinfo_header": {
                        "type": "boolean",
                        "default": true,
                        "description": "Whether the user info token should be added in the X-Userinfo header to the request for downstream."
                    },
                    "introspection_endpoint": {
                        "type": "string"
                    },
                    "introspection_endpoint_auth_method": {
                        "default": "client_secret_basic",
                        "type": "string"
                    },
                    "client_id": {
                        "type": "string"
                    },
                    "scope": {
                        "default": "openid",
                        "type": "string"
                    },
                    "set_refresh_token_header": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether the refresh token should be added in the X-Refresh-Token header to the request for downstream."
                    },
                    "realm": {
                        "default": "apisix",
                        "type": "string"
                    },
                    "logout_path": {
                        "default": "/logout",
                        "type": "string"
                    },
                    "token_signing_alg_values_expected": {
                        "type": "string"
                    },
                    "redirect_uri": {
                        "description": "use ngx.var.request_uri if not configured",
                        "type": "string"
                    },
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    },
                    "post_logout_redirect_uri": {
                        "description": "the URI will be redirect when request logout_path",
                        "type": "string"
                    },
                    "ssl_verify": {
                        "default": false,
                        "type": "boolean"
                    },
                    "unauth_action": {
                        "description": "The action performed when client is not authorized. Use auth to redirect user to identity provider, deny to respond with 401 Unauthorized, and pass to allow the request regardless.",
                        "type": "string",
                        "default": "auth",
                        "enum": [
                            "auth",
                            "deny",
                            "pass"
                        ]
                    },
                    "public_key": {
                        "type": "string"
                    },
                    "bearer_only": {
                        "default": false,
                        "type": "boolean"
                    },
                    "discovery": {
                        "type": "string"
                    }
                },
                "$comment": "this is a mark for our injected plugin schema"
            },
            "version": 0.2,
            "priority": 2599
        },
        "redirect": {
            "schema": {
                "$comment": "this is a mark for our injected plugin schema",
                "type": "object",
                "properties": {
                    "encode_uri": {
                        "default": false,
                        "type": "boolean"
                    },
                    "uri": {
                        "pattern": "(\\\\\\$[0-9a-zA-Z_]+)|\\$\\{([0-9a-zA-Z_]+)\\}|\\$([0-9a-zA-Z_]+)|(\\$|[^$\\\\]+)",
                        "type": "string",
                        "minLength": 2
                    },
                    "ret_code": {
                        "type": "integer",
                        "default": 302,
                        "minimum": 200
                    },
                    "regex_uri": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "regex uri"
                        },
                        "minItems": 2,
                        "description": "params for generating new uri that substitute from client uri, first param is regular expression, the second one is uri template",
                        "maxItems": 2
                    },
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    },
                    "append_query_string": {
                        "default": false,
                        "type": "boolean"
                    },
                    "http_to_https": {
                        "type": "boolean"
                    }
                },
                "oneOf": [
                    {
                        "required": [
                            "uri"
                        ]
                    },
                    {
                        "required": [
                            "regex_uri"
                        ]
                    },
                    {
                        "required": [
                            "http_to_https"
                        ]
                    }
                ]
            },
            "version": 0.1,
            "priority": 900
        },
        "server-info": {
            "priority": 990,
            "schema": {
                "type": "object",
                "properties": {
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    }
                },
                "$comment": "this is a mark for our injected plugin schema"
            },
            "scope": "global",
            "version": 0.1
        },
        "traffic-split": {
            "schema": {
                "type": "object",
                "properties": {
                    "rules": {
                        "items": {
                            "properties": {
                                "weighted_upstreams": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "upstream_id": {
                                                "anyOf": [
                                                    {
                                                        "maxLength": 64,
                                                        "type": "string",
                                                        "pattern": "^[a-zA-Z0-9-_.]+$",
                                                        "minLength": 1
                                                    },
                                                    {
                                                        "minimum": 1,
                                                        "type": "integer"
                                                    }
                                                ]
                                            },
                                            "weight": {
                                                "description": "used to split traffic between differentupstreams for plugin configuration",
                                                "type": "integer",
                                                "default": 1,
                                                "minimum": 0
                                            },
                                            "upstream": {
                                                "type": "object",
                                                "properties": {
                                                    "pass_host": {
                                                        "enum": [
                                                            "pass",
                                                            "node",
                                                            "rewrite"
                                                        ],
                                                        "type": "string",
                                                        "default": "pass",
                                                        "description": "mod of host passing"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "default": "roundrobin",
                                                        "description": "algorithms of load balancing"
                                                    },
                                                    "discovery_type": {
                                                        "type": "string",
                                                        "description": "discovery type"
                                                    },
                                                    "tls": {
                                                        "type": "object",
                                                        "properties": {
                                                            "client_cert_id": {
                                                                "anyOf": [
                                                                    {
                                                                        "maxLength": 64,
                                                                        "type": "string",
                                                                        "pattern": "^[a-zA-Z0-9-_.]+$",
                                                                        "minLength": 1
                                                                    },
                                                                    {
                                                                        "minimum": 1,
                                                                        "type": "integer"
                                                                    }
                                                                ]
                                                            },
                                                            "client_key": {
                                                                "maxLength": 65536,
                                                                "type": "string",
                                                                "minLength": 128
                                                            },
                                                            "verify": {
                                                                "description": "Turn on server certificate verification, currently only kafka upstream is supported",
                                                                "default": false,
                                                                "type": "boolean"
                                                            },
                                                            "client_cert": {
                                                                "maxLength": 65536,
                                                                "type": "string",
                                                                "minLength": 128
                                                            }
                                                        },
                                                        "dependencies": {
                                                            "client_cert": {
                                                                "required": [
                                                                    "client_key"
                                                                ],
                                                                "not": {
                                                                    "required": [
                                                                        "client_cert_id"
                                                                    ]
                                                                }
                                                            },
                                                            "client_key": {
                                                                "required": [
                                                                    "client_cert"
                                                                ],
                                                                "not": {
                                                                    "required": [
                                                                        "client_cert_id"
                                                                    ]
                                                                }
                                                            },
                                                            "client_cert_id": {
                                                                "not": {
                                                                    "required": [
                                                                        "client_client",
                                                                        "client_key"
                                                                    ]
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "labels": {
                                                        "patternProperties": {
                                                            ".*": {
                                                                "maxLength": 64,
                                                                "type": "string",
                                                                "pattern": "^\\S+$",
                                                                "description": "value of label",
                                                                "minLength": 1
                                                            }
                                                        },
                                                        "type": "object",
                                                        "description": "key/value pairs to specify attributes"
                                                    },
                                                    "key": {
                                                        "type": "string",
                                                        "description": "the key of chash for dynamic load balancing"
                                                    },
                                                    "desc": {
                                                        "maxLength": 256,
                                                        "type": "string"
                                                    },
                                                    "update_time": {
                                                        "type": "integer"
                                                    },
                                                    "name": {
                                                        "maxLength": 100,
                                                        "type": "string",
                                                        "minLength": 1
                                                    },
                                                    "create_time": {
                                                        "type": "integer"
                                                    },
                                                    "retries": {
                                                        "minimum": 0,
                                                        "type": "integer"
                                                    },
                                                    "nodes": {
                                                        "anyOf": [
                                                            {
                                                                "patternProperties": {
                                                                    ".*": {
                                                                        "type": "integer",
                                                                        "description": "weight of node",
                                                                        "minimum": 0
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            {
                                                                "items": {
                                                                    "required": [
                                                                        "host",
                                                                        "port",
                                                                        "weight"
                                                                    ],
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "port": {
                                                                            "type": "integer",
                                                                            "description": "port of node",
                                                                            "minimum": 1
                                                                        },
                                                                        "weight": {
                                                                            "type": "integer",
                                                                            "description": "weight of node",
                                                                            "minimum": 0
                                                                        },
                                                                        "host": {
                                                                            "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
                                                                            "type": "string"
                                                                        },
                                                                        "metadata": {
                                                                            "type": "object",
                                                                            "description": "metadata of node"
                                                                        },
                                                                        "priority": {
                                                                            "type": "integer",
                                                                            "default": 0,
                                                                            "description": "priority of node"
                                                                        }
                                                                    }
                                                                },
                                                                "type": "array"
                                                            }
                                                        ]
                                                    },
                                                    "keepalive_pool": {
                                                        "properties": {
                                                            "size": {
                                                                "type": "integer",
                                                                "default": 320,
                                                                "minimum": 1
                                                            },
                                                            "idle_timeout": {
                                                                "type": "number",
                                                                "default": 60,
                                                                "minimum": 0
                                                            },
                                                            "requests": {
                                                                "type": "integer",
                                                                "default": 1000,
                                                                "minimum": 1
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "id": {
                                                        "anyOf": [
                                                            {
                                                                "maxLength": 64,
                                                                "type": "string",
                                                                "pattern": "^[a-zA-Z0-9-_.]+$",
                                                                "minLength": 1
                                                            },
                                                            {
                                                                "minimum": 1,
                                                                "type": "integer"
                                                            }
                                                        ]
                                                    },
                                                    "timeout": {
                                                        "required": [
                                                            "connect",
                                                            "send",
                                                            "read"
                                                        ],
                                                        "type": "object",
                                                        "properties": {
                                                            "send": {
                                                                "exclusiveMinimum": 0,
                                                                "type": "number"
                                                            },
                                                            "read": {
                                                                "exclusiveMinimum": 0,
                                                                "type": "number"
                                                            },
                                                            "connect": {
                                                                "exclusiveMinimum": 0,
                                                                "type": "number"
                                                            }
                                                        }
                                                    },
                                                    "hash_on": {
                                                        "type": "string",
                                                        "default": "vars",
                                                        "enum": [
                                                            "vars",
                                                            "header",
                                                            "cookie",
                                                            "consumer",
                                                            "vars_combinations"
                                                        ]
                                                    },
                                                    "upstream_host": {
                                                        "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
                                                        "type": "string"
                                                    },
                                                    "service_name": {
                                                        "maxLength": 256,
                                                        "type": "string",
                                                        "minLength": 1
                                                    },
                                                    "retry_timeout": {
                                                        "minimum": 0,
                                                        "type": "number"
                                                    },
                                                    "checks": {
                                                        "type": "object",
                                                        "properties": {
                                                            "passive": {
                                                                "properties": {
                                                                    "type": {
                                                                        "enum": [
                                                                            "http",
                                                                            "https",
                                                                            "tcp"
                                                                        ],
                                                                        "default": "http",
                                                                        "type": "string"
                                                                    },
                                                                    "healthy": {
                                                                        "properties": {
                                                                            "successes": {
                                                                                "maximum": 254,
                                                                                "type": "integer",
                                                                                "default": 5,
                                                                                "minimum": 0
                                                                            },
                                                                            "http_statuses": {
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "maximum": 599,
                                                                                    "type": "integer",
                                                                                    "minimum": 200
                                                                                },
                                                                                "minItems": 1,
                                                                                "default": [
                                                                                    200,
                                                                                    201,
                                                                                    202,
                                                                                    203,
                                                                                    204,
                                                                                    205,
                                                                                    206,
                                                                                    207,
                                                                                    208,
                                                                                    226,
                                                                                    300,
                                                                                    301,
                                                                                    302,
                                                                                    303,
                                                                                    304,
                                                                                    305,
                                                                                    306,
                                                                                    307,
                                                                                    308
                                                                                ],
                                                                                "uniqueItems": true
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "unhealthy": {
                                                                        "properties": {
                                                                            "http_failures": {
                                                                                "maximum": 254,
                                                                                "type": "integer",
                                                                                "default": 5,
                                                                                "minimum": 0
                                                                            },
                                                                            "http_statuses": {
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "maximum": 599,
                                                                                    "type": "integer",
                                                                                    "minimum": 200
                                                                                },
                                                                                "minItems": 1,
                                                                                "default": [
                                                                                    429,
                                                                                    500,
                                                                                    503
                                                                                ],
                                                                                "uniqueItems": true
                                                                            },
                                                                            "tcp_failures": {
                                                                                "maximum": 254,
                                                                                "type": "integer",
                                                                                "default": 2,
                                                                                "minimum": 0
                                                                            },
                                                                            "timeouts": {
                                                                                "maximum": 254,
                                                                                "type": "integer",
                                                                                "default": 7,
                                                                                "minimum": 0
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "active": {
                                                                "properties": {
                                                                    "req_headers": {
                                                                        "minItems": 1,
                                                                        "type": "array",
                                                                        "items": {
                                                                            "uniqueItems": true,
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": {
                                                                        "enum": [
                                                                            "http",
                                                                            "https",
                                                                            "tcp"
                                                                        ],
                                                                        "default": "http",
                                                                        "type": "string"
                                                                    },
                                                                    "healthy": {
                                                                        "properties": {
                                                                            "successes": {
                                                                                "maximum": 254,
                                                                                "type": "integer",
                                                                                "default": 2,
                                                                                "minimum": 1
                                                                            },
                                                                            "http_statuses": {
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "maximum": 599,
                                                                                    "type": "integer",
                                                                                    "minimum": 200
                                                                                },
                                                                                "minItems": 1,
                                                                                "default": [
                                                                                    200,
                                                                                    302
                                                                                ],
                                                                                "uniqueItems": true
                                                                            },
                                                                            "interval": {
                                                                                "type": "integer",
                                                                                "default": 1,
                                                                                "minimum": 1
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "unhealthy": {
                                                                        "properties": {
                                                                            "http_statuses": {
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "maximum": 599,
                                                                                    "type": "integer",
                                                                                    "minimum": 200
                                                                                },
                                                                                "minItems": 1,
                                                                                "default": [
                                                                                    429,
                                                                                    404,
                                                                                    500,
                                                                                    501,
                                                                                    502,
                                                                                    503,
                                                                                    504,
                                                                                    505
                                                                                ],
                                                                                "uniqueItems": true
                                                                            },
                                                                            "timeouts": {
                                                                                "maximum": 254,
                                                                                "type": "integer",
                                                                                "default": 3,
                                                                                "minimum": 1
                                                                            },
                                                                            "http_failures": {
                                                                                "maximum": 254,
                                                                                "type": "integer",
                                                                                "default": 5,
                                                                                "minimum": 1
                                                                            },
                                                                            "tcp_failures": {
                                                                                "maximum": 254,
                                                                                "type": "integer",
                                                                                "default": 2,
                                                                                "minimum": 1
                                                                            },
                                                                            "interval": {
                                                                                "type": "integer",
                                                                                "default": 1,
                                                                                "minimum": 1
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "port": {
                                                                        "maximum": 65535,
                                                                        "type": "integer",
                                                                        "minimum": 1
                                                                    },
                                                                    "http_path": {
                                                                        "default": "/",
                                                                        "type": "string"
                                                                    },
                                                                    "host": {
                                                                        "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
                                                                        "type": "string"
                                                                    },
                                                                    "timeout": {
                                                                        "default": 1,
                                                                        "type": "number"
                                                                    },
                                                                    "concurrency": {
                                                                        "default": 10,
                                                                        "type": "integer"
                                                                    },
                                                                    "https_verify_certificate": {
                                                                        "default": true,
                                                                        "type": "boolean"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "anyOf": [
                                                            {
                                                                "required": [
                                                                    "active"
                                                                ]
                                                            },
                                                            {
                                                                "required": [
                                                                    "active",
                                                                    "passive"
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "scheme": {
                                                        "enum": [
                                                            "grpc",
                                                            "grpcs",
                                                            "http",
                                                            "https",
                                                            "tcp",
                                                            "tls",
                                                            "udp",
                                                            "kafka"
                                                        ],
                                                        "default": "http",
                                                        "description": "The scheme of the upstream. For L7 proxy, it can be one of grpc/grpcs/http/https. For L4 proxy, it can be one of tcp/tls/udp. For specific protocols, it can be kafka."
                                                    },
                                                    "discovery_args": {
                                                        "properties": {
                                                            "group_name": {
                                                                "type": "string",
                                                                "description": "group name"
                                                            },
                                                            "namespace_id": {
                                                                "type": "string",
                                                                "description": "namespace id"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "oneOf": [
                                                    {
                                                        "required": [
                                                            "nodes"
                                                        ]
                                                    },
                                                    {
                                                        "required": [
                                                            "service_name",
                                                            "discovery_type"
                                                        ]
                                                    }
                                                ]
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "minItems": 1,
                                    "maxItems": 20,
                                    "default": [
                                        {
                                            "weight": 1
                                        }
                                    ]
                                },
                                "match": {
                                    "items": {
                                        "properties": {
                                            "vars": {
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    }
                },
                "$comment": "this is a mark for our injected plugin schema"
            },
            "version": 0.1,
            "priority": 966
        },
        "client-control": {
            "schema": {
                "type": "object",
                "properties": {
                    "max_body_size": {
                        "minimum": 0,
                        "type": "integer"
                    },
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    }
                },
                "$comment": "this is a mark for our injected plugin schema"
            },
            "version": 0.1,
            "priority": 22000
        },
        "grpc-transcode": {
            "schema": {
                "required": [
                    "proto_id",
                    "service",
                    "method"
                ],
                "type": "object",
                "additionalProperties": true,
                "properties": {
                    "show_status_in_body": {
                        "type": "boolean",
                        "default": false,
                        "description": "show decoded grpc-status-details-bin in response body"
                    },
                    "proto_id": {
                        "anyOf": [
                            {
                                "maxLength": 64,
                                "type": "string",
                                "pattern": "^[a-zA-Z0-9-_.]+$",
                                "minLength": 1
                            },
                            {
                                "minimum": 1,
                                "type": "integer"
                            }
                        ]
                    },
                    "status_detail_type": {
                        "type": "string",
                        "description": "the message type of the grpc-status-details-bin's details part, if not given, the details part will not be decoded"
                    },
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    },
                    "method": {
                        "type": "string",
                        "description": "the method name in the grpc service."
                    },
                    "deadline": {
                        "type": "number",
                        "default": 0,
                        "description": "deadline for grpc, millisecond"
                    },
                    "service": {
                        "type": "string",
                        "description": "the grpc service name"
                    },
                    "pb_option": {
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "enum": [
                                        "int64_as_number",
                                        "int64_as_string",
                                        "int64_as_hexstring"
                                    ],
                                    "description": "enum as result"
                                },
                                {
                                    "type": "string",
                                    "enum": [
                                        "enum_as_name",
                                        "enum_as_value"
                                    ],
                                    "description": "int64 as result"
                                },
                                {
                                    "type": "string",
                                    "enum": [
                                        "auto_default_values",
                                        "no_default_values",
                                        "use_default_values",
                                        "use_default_metatable"
                                    ],
                                    "description": "default values option"
                                },
                                {
                                    "type": "string",
                                    "enum": [
                                        "enable_hooks",
                                        "disable_hooks"
                                    ],
                                    "description": "hooks option"
                                }
                            ],
                            "type": "string"
                        },
                        "default": [
                            "enum_as_name",
                            "int64_as_number",
                            "auto_default_values",
                            "disable_hooks"
                        ]
                    }
                },
                "$comment": "this is a mark for our injected plugin schema"
            },
            "priority": 506,
            "version": 0.1
        },
        "limit-count": {
            "schema": {
                "required": [
                    "count",
                    "time_window"
                ],
                "type": "object",
                "then": {
                    "properties": {
                        "redis_host": {
                            "minLength": 2,
                            "type": "string"
                        },
                        "redis_port": {
                            "type": "integer",
                            "default": 6379,
                            "minimum": 1
                        },
                        "redis_password": {
                            "minLength": 0,
                            "type": "string"
                        },
                        "redis_database": {
                            "type": "integer",
                            "default": 0,
                            "minimum": 0
                        },
                        "redis_timeout": {
                            "type": "integer",
                            "default": 1000,
                            "minimum": 1
                        }
                    },
                    "required": [
                        "redis_host"
                    ]
                },
                "else": {
                    "then": {
                        "properties": {
                            "redis_cluster_ssl": {
                                "default": false,
                                "type": "boolean"
                            },
                            "redis_cluster_ssl_verify": {
                                "default": false,
                                "type": "boolean"
                            },
                            "redis_password": {
                                "minLength": 0,
                                "type": "string"
                            },
                            "redis_timeout": {
                                "type": "integer",
                                "default": 1000,
                                "minimum": 1
                            },
                            "redis_cluster_nodes": {
                                "minItems": 2,
                                "type": "array",
                                "items": {
                                    "maxLength": 100,
                                    "type": "string",
                                    "minLength": 2
                                }
                            },
                            "redis_cluster_name": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "redis_cluster_nodes",
                            "redis_cluster_name"
                        ]
                    },
                    "if": {
                        "properties": {
                            "policy": {
                                "enum": [
                                    "redis-cluster"
                                ]
                            }
                        }
                    }
                },
                "if": {
                    "properties": {
                        "policy": {
                            "enum": [
                                "redis"
                            ]
                        }
                    }
                },
                "properties": {
                    "count": {
                        "exclusiveMinimum": 0,
                        "type": "integer"
                    },
                    "allow_degradation": {
                        "default": false,
                        "type": "boolean"
                    },
                    "key": {
                        "default": "remote_addr",
                        "type": "string"
                    },
                    "rejected_code": {
                        "maximum": 599,
                        "type": "integer",
                        "default": 503,
                        "minimum": 200
                    },
                    "rejected_msg": {
                        "minLength": 1,
                        "type": "string"
                    },
                    "time_window": {
                        "exclusiveMinimum": 0,
                        "type": "integer"
                    },
                    "key_type": {
                        "enum": [
                            "var",
                            "var_combination",
                            "constant"
                        ],
                        "default": "var",
                        "type": "string"
                    },
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    },
                    "policy": {
                        "enum": [
                            "local",
                            "redis",
                            "redis-cluster"
                        ],
                        "default": "local",
                        "type": "string"
                    },
                    "show_limit_quota_header": {
                        "default": true,
                        "type": "boolean"
                    },
                    "group": {
                        "type": "string"
                    }
                },
                "$comment": "this is a mark for our injected plugin schema"
            },
            "version": 0.4,
            "priority": 1002
        },
        "api-breaker": {
            "schema": {
                "required": [
                    "break_response_code"
                ],
                "type": "object",
                "properties": {
                    "break_response_headers": {
                        "items": {
                            "required": [
                                "key",
                                "value"
                            ],
                            "type": "object",
                            "properties": {
                                "value": {
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "key": {
                                    "minLength": 1,
                                    "type": "string"
                                }
                            }
                        },
                        "type": "array"
                    },
                    "max_breaker_sec": {
                        "type": "integer",
                        "default": 300,
                        "minimum": 3
                    },
                    "healthy": {
                        "type": "object",
                        "properties": {
                            "successes": {
                                "type": "integer",
                                "default": 3,
                                "minimum": 1
                            },
                            "http_statuses": {
                                "type": "array",
                                "items": {
                                    "maximum": 499,
                                    "type": "integer",
                                    "minimum": 200
                                },
                                "minItems": 1,
                                "default": [
                                    200
                                ],
                                "uniqueItems": true
                            }
                        },
                        "default": {
                            "successes": 3,
                            "http_statuses": [
                                200
                            ]
                        }
                    },
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    },
                    "unhealthy": {
                        "type": "object",
                        "properties": {
                            "failures": {
                                "type": "integer",
                                "default": 3,
                                "minimum": 1
                            },
                            "http_statuses": {
                                "type": "array",
                                "items": {
                                    "maximum": 599,
                                    "type": "integer",
                                    "minimum": 500
                                },
                                "minItems": 1,
                                "default": [
                                    500
                                ],
                                "uniqueItems": true
                            }
                        },
                        "default": {
                            "failures": 3,
                            "http_statuses": [
                                500
                            ]
                        }
                    },
                    "break_response_code": {
                        "maximum": 599,
                        "type": "integer",
                        "minimum": 200
                    },
                    "break_response_body": {
                        "type": "string"
                    }
                },
                "$comment": "this is a mark for our injected plugin schema"
            },
            "priority": 1005,
            "version": 0.1
        },
        "datadog": {
            "version": 0.1,
            "schema": {
                "type": "object",
                "properties": {
                    "batch_max_size": {
                        "type": "integer",
                        "default": 1000,
                        "minimum": 1
                    },
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    },
                    "max_retry_count": {
                        "type": "integer",
                        "default": 0,
                        "minimum": 0
                    },
                    "retry_delay": {
                        "type": "integer",
                        "default": 1,
                        "minimum": 0
                    },
                    "buffer_duration": {
                        "type": "integer",
                        "default": 60,
                        "minimum": 1
                    },
                    "name": {
                        "default": "datadog",
                        "type": "string"
                    },
                    "inactive_timeout": {
                        "type": "integer",
                        "default": 5,
                        "minimum": 1
                    },
                    "prefer_name": {
                        "default": true,
                        "type": "boolean"
                    }
                },
                "$comment": "this is a mark for our injected plugin schema"
            },
            "metadata_schema": {
                "properties": {
                    "namespace": {
                        "default": "apisix",
                        "type": "string"
                    },
                    "port": {
                        "type": "integer",
                        "default": 8125,
                        "minimum": 0
                    },
                    "constant_tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "default": [
                            "source:apisix"
                        ]
                    },
                    "host": {
                        "default": "127.0.0.1",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "priority": 495
        },
        "workflow": {
            "schema": {
                "type": "object",
                "properties": {
                    "rules": {
                        "items": {
                            "required": [
                                "case",
                                "actions"
                            ],
                            "type": "object",
                            "properties": {
                                "case": {
                                    "minItems": 1,
                                    "type": "array",
                                    "items": {
                                        "anyOf": [
                                            {
                                                "type": "array"
                                            },
                                            {
                                                "type": "string"
                                            }
                                        ]
                                    }
                                },
                                "actions": {
                                    "items": {
                                        "minItems": 1,
                                        "type": "array"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "type": "array"
                    },
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    }
                },
                "$comment": "this is a mark for our injected plugin schema"
            },
            "version": 0.1,
            "priority": 1006
        },
        "limit-req": {
            "schema": {
                "required": [
                    "rate",
                    "burst",
                    "key"
                ],
                "type": "object",
                "properties": {
                    "burst": {
                        "minimum": 0,
                        "type": "number"
                    },
                    "nodelay": {
                        "default": false,
                        "type": "boolean"
                    },
                    "allow_degradation": {
                        "default": false,
                        "type": "boolean"
                    },
                    "key": {
                        "type": "string"
                    },
                    "rejected_code": {
                        "maximum": 599,
                        "type": "integer",
                        "default": 503,
                        "minimum": 200
                    },
                    "rejected_msg": {
                        "minLength": 1,
                        "type": "string"
                    },
                    "key_type": {
                        "enum": [
                            "var",
                            "var_combination"
                        ],
                        "default": "var",
                        "type": "string"
                    },
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    },
                    "rate": {
                        "exclusiveMinimum": 0,
                        "type": "number"
                    }
                },
                "$comment": "this is a mark for our injected plugin schema"
            },
            "version": 0.1,
            "priority": 1001
        },
        "elasticsearch-logger": {
            "version": 0.1,
            "schema": {
                "type": "object",
                "$comment": "this is a mark for our injected plugin schema",
                "encrypt_fields": [
                    "auth.password"
                ],
                "properties": {
                    "endpoint_addr": {
                        "pattern": "[^/]$",
                        "type": "string"
                    },
                    "timeout": {
                        "type": "integer",
                        "default": 10,
                        "minimum": 1
                    },
                    "max_retry_count": {
                        "type": "integer",
                        "default": 0,
                        "minimum": 0
                    },
                    "retry_delay": {
                        "type": "integer",
                        "default": 1,
                        "minimum": 0
                    },
                    "buffer_duration": {
                        "type": "integer",
                        "default": 60,
                        "minimum": 1
                    },
                    "batch_max_size": {
                        "type": "integer",
                        "default": 1000,
                        "minimum": 1
                    },
                    "endpoint_addrs": {
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "pattern": "[^/]$",
                            "type": "string"
                        }
                    },
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    },
                    "auth": {
                        "required": [
                            "username",
                            "password"
                        ],
                        "type": "object",
                        "properties": {
                            "password": {
                                "minLength": 1,
                                "type": "string"
                            },
                            "username": {
                                "minLength": 1,
                                "type": "string"
                            }
                        }
                    },
                    "ssl_verify": {
                        "default": true,
                        "type": "boolean"
                    },
                    "field": {
                        "required": [
                            "index"
                        ],
                        "type": "object",
                        "properties": {
                            "index": {
                                "type": "string"
                            },
                            "type": {
                                "type": "string"
                            }
                        }
                    },
                    "log_format": {
                        "type": "object"
                    },
                    "inactive_timeout": {
                        "type": "integer",
                        "default": 5,
                        "minimum": 1
                    },
                    "name": {
                        "default": "elasticsearch-logger",
                        "type": "string"
                    }
                },
                "oneOf": [
                    {
                        "required": [
                            "endpoint_addr",
                            "field"
                        ]
                    },
                    {
                        "required": [
                            "endpoint_addrs",
                            "field"
                        ]
                    }
                ]
            },
            "metadata_schema": {
                "properties": {
                    "log_format": {
                        "default": {
                            "@timestamp": "$time_iso8601",
                            "client_ip": "$remote_addr",
                            "host": "$host"
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "priority": 413
        },
        "ip-restriction": {
            "schema": {
                "$comment": "this is a mark for our injected plugin schema",
                "type": "object",
                "properties": {
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    },
                    "blacklist": {
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "anyOf": [
                                {
                                    "format": "ipv4",
                                    "type": "string",
                                    "title": "IPv4"
                                },
                                {
                                    "pattern": "^([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])/([12]?[0-9]|3[0-2])$",
                                    "type": "string",
                                    "title": "IPv4/CIDR"
                                },
                                {
                                    "format": "ipv6",
                                    "type": "string",
                                    "title": "IPv6"
                                },
                                {
                                    "pattern": "^([a-fA-F0-9]{0,4}:){1,8}(:[a-fA-F0-9]{0,4}){0,8}([a-fA-F0-9]{0,4})?/[0-9]{1,3}$",
                                    "type": "string",
                                    "title": "IPv6/CIDR"
                                }
                            ]
                        }
                    },
                    "message": {
                        "maxLength": 1024,
                        "type": "string",
                        "default": "Your IP address is not allowed",
                        "minLength": 1
                    },
                    "whitelist": {
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "anyOf": [
                                {
                                    "format": "ipv4",
                                    "type": "string",
                                    "title": "IPv4"
                                },
                                {
                                    "pattern": "^([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])/([12]?[0-9]|3[0-2])$",
                                    "type": "string",
                                    "title": "IPv4/CIDR"
                                },
                                {
                                    "format": "ipv6",
                                    "type": "string",
                                    "title": "IPv6"
                                },
                                {
                                    "pattern": "^([a-fA-F0-9]{0,4}:){1,8}(:[a-fA-F0-9]{0,4}){0,8}([a-fA-F0-9]{0,4})?/[0-9]{1,3}$",
                                    "type": "string",
                                    "title": "IPv6/CIDR"
                                }
                            ]
                        }
                    }
                },
                "oneOf": [
                    {
                        "required": [
                            "whitelist"
                        ]
                    },
                    {
                        "required": [
                            "blacklist"
                        ]
                    }
                ]
            },
            "version": 0.1,
            "priority": 3000
        },
        "degraphql": {
            "schema": {
                "required": [
                    "query"
                ],
                "type": "object",
                "properties": {
                    "operation_name": {
                        "maxLength": 1024,
                        "type": "string",
                        "minLength": 1
                    },
                    "query": {
                        "maxLength": 1024,
                        "type": "string",
                        "minLength": 1
                    },
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    },
                    "variables": {
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "$comment": "this is a mark for our injected plugin schema"
            },
            "version": 0.1,
            "priority": 509
        },
        "request-id": {
            "schema": {
                "type": "object",
                "properties": {
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    },
                    "algorithm": {
                        "enum": [
                            "uuid",
                            "snowflake",
                            "nanoid",
                            "range_id"
                        ],
                        "default": "uuid",
                        "type": "string"
                    },
                    "include_in_response": {
                        "default": true,
                        "type": "boolean"
                    },
                    "header_name": {
                        "default": "X-Request-Id",
                        "type": "string"
                    },
                    "range_id": {
                        "properties": {
                            "length": {
                                "type": "integer",
                                "default": 16,
                                "minimum": 6
                            },
                            "char_set": {
                                "type": "string",
                                "default": "abcdefghijklmnopqrstuvwxyzABCDEFGHIGKLMNOPQRSTUVWXYZ0123456789",
                                "minLength": 6
                            }
                        },
                        "type": "object"
                    }
                },
                "$comment": "this is a mark for our injected plugin schema"
            },
            "priority": 12015,
            "version": 0.1
        },
        "authz-keycloak": {
            "schema": {
                "required": [
                    "client_id"
                ],
                "type": "object",
                "allOf": [
                    {
                        "anyOf": [
                            {
                                "required": [
                                    "discovery"
                                ]
                            },
                            {
                                "required": [
                                    "token_endpoint"
                                ]
                            }
                        ]
                    },
                    {
                        "anyOf": [
                            {
                                "properties": {
                                    "lazy_load_paths": {
                                        "enum": [
                                            false
                                        ]
                                    }
                                }
                            },
                            {
                                "properties": {
                                    "lazy_load_paths": {
                                        "enum": [
                                            true
                                        ]
                                    }
                                },
                                "anyOf": [
                                    {
                                        "required": [
                                            "discovery"
                                        ]
                                    },
                                    {
                                        "required": [
                                            "resource_registration_endpoint"
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ],
                "encrypt_fields": [
                    "client_secret"
                ],
                "properties": {
                    "http_method_as_scope": {
                        "default": false,
                        "type": "boolean"
                    },
                    "timeout": {
                        "type": "integer",
                        "default": 3000,
                        "minimum": 1000
                    },
                    "access_denied_redirect_uri": {
                        "maxLength": 2048,
                        "type": "string",
                        "minLength": 1
                    },
                    "keepalive": {
                        "default": true,
                        "type": "boolean"
                    },
                    "refresh_token_expires_leeway": {
                        "type": "integer",
                        "default": 0,
                        "minimum": 0
                    },
                    "access_token_expires_in": {
                        "type": "integer",
                        "default": 300,
                        "minimum": 1
                    },
                    "access_token_expires_leeway": {
                        "type": "integer",
                        "default": 0,
                        "minimum": 0
                    },
                    "keepalive_timeout": {
                        "type": "integer",
                        "default": 60000,
                        "minimum": 1000
                    },
                    "client_secret": {
                        "maxLength": 100,
                        "type": "string",
                        "minLength": 1
                    },
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    },
                    "client_id": {
                        "maxLength": 100,
                        "type": "string",
                        "minLength": 1
                    },
                    "password_grant_token_generation_incoming_uri": {
                        "maxLength": 4096,
                        "type": "string",
                        "minLength": 1
                    },
                    "keepalive_pool": {
                        "type": "integer",
                        "default": 5,
                        "minimum": 1
                    },
                    "refresh_token_expires_in": {
                        "type": "integer",
                        "default": 3600,
                        "minimum": 1
                    },
                    "cache_ttl_seconds": {
                        "type": "integer",
                        "default": 86400,
                        "minimum": 1
                    },
                    "token_endpoint": {
                        "maxLength": 4096,
                        "type": "string",
                        "minLength": 1
                    },
                    "resource_registration_endpoint": {
                        "maxLength": 4096,
                        "type": "string",
                        "minLength": 1
                    },
                    "grant_type": {
                        "maxLength": 100,
                        "enum": [
                            "urn:ietf:params:oauth:grant-type:uma-ticket"
                        ],
                        "default": "urn:ietf:params:oauth:grant-type:uma-ticket",
                        "type": "string",
                        "minLength": 1
                    },
                    "ssl_verify": {
                        "default": true,
                        "type": "boolean"
                    },
                    "discovery": {
                        "maxLength": 4096,
                        "type": "string",
                        "minLength": 1
                    },
                    "policy_enforcement_mode": {
                        "enum": [
                            "ENFORCING",
                            "PERMISSIVE"
                        ],
                        "default": "ENFORCING",
                        "type": "string"
                    },
                    "permissions": {
                        "default": {},
                        "type": "array",
                        "items": {
                            "maxLength": 100,
                            "type": "string",
                            "minLength": 1
                        },
                        "uniqueItems": true
                    },
                    "lazy_load_paths": {
                        "default": false,
                        "type": "boolean"
                    }
                },
                "$comment": "this is a mark for our injected plugin schema"
            },
            "version": 0.1,
            "priority": 2000
        },
        "jwt-auth": {
            "consumer_schema": {
                "required": [
                    "key"
                ],
                "type": "object",
                "dependencies": {
                    "algorithm": {
                        "oneOf": [
                            {
                                "properties": {
                                    "algorithm": {
                                        "default": "HS256",
                                        "enum": [
                                            "HS256",
                                            "HS512"
                                        ]
                                    }
                                }
                            },
                            {
                                "properties": {
                                    "public_key": {
                                        "type": "string"
                                    },
                                    "algorithm": {
                                        "enum": [
                                            "RS256",
                                            "ES256"
                                        ]
                                    },
                                    "private_key": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "public_key",
                                    "private_key"
                                ]
                            }
                        ]
                    }
                },
                "encrypt_fields": [
                    "secret",
                    "private_key"
                ],
                "properties": {
                    "exp": {
                        "type": "integer",
                        "default": 86400,
                        "minimum": 1
                    },
                    "secret": {
                        "type": "string"
                    },
                    "algorithm": {
                        "enum": [
                            "HS256",
                            "HS512",
                            "RS256",
                            "ES256"
                        ],
                        "default": "HS256",
                        "type": "string"
                    },
                    "base64_secret": {
                        "default": false,
                        "type": "boolean"
                    },
                    "lifetime_grace_period": {
                        "type": "integer",
                        "default": 0,
                        "minimum": 0
                    },
                    "key": {
                        "type": "string"
                    }
                }
            },
            "priority": 2510,
            "type": "auth",
            "schema": {
                "type": "object",
                "properties": {
                    "hide_credentials": {
                        "default": false,
                        "type": "boolean"
                    },
                    "cookie": {
                        "default": "jwt",
                        "type": "string"
                    },
                    "query": {
                        "default": "jwt",
                        "type": "string"
                    },
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    },
                    "header": {
                        "default": "authorization",
                        "type": "string"
                    }
                },
                "$comment": "this is a mark for our injected plugin schema"
            },
            "version": 0.1
        },
        "basic-auth": {
            "consumer_schema": {
                "required": [
                    "username",
                    "password"
                ],
                "type": "object",
                "title": "work with consumer object",
                "encrypt_fields": [
                    "password"
                ],
                "properties": {
                    "password": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                }
            },
            "priority": 2520,
            "type": "auth",
            "schema": {
                "properties": {
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    },
                    "hide_credentials": {
                        "default": false,
                        "type": "boolean"
                    }
                },
                "type": "object",
                "title": "work with route or service object",
                "$comment": "this is a mark for our injected plugin schema"
            },
            "version": 0.1
        },
        "ldap-auth": {
            "consumer_schema": {
                "required": [
                    "user_dn"
                ],
                "type": "object",
                "title": "work with consumer object",
                "properties": {
                    "user_dn": {
                        "type": "string"
                    }
                }
            },
            "priority": 2540,
            "type": "auth",
            "schema": {
                "required": [
                    "base_dn",
                    "ldap_uri"
                ],
                "type": "object",
                "title": "work with route or service object",
                "properties": {
                    "ldap_uri": {
                        "type": "string"
                    },
                    "use_tls": {
                        "default": false,
                        "type": "boolean"
                    },
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    },
                    "uid": {
                        "default": "cn",
                        "type": "string"
                    },
                    "base_dn": {
                        "type": "string"
                    },
                    "tls_verify": {
                        "default": false,
                        "type": "boolean"
                    }
                },
                "$comment": "this is a mark for our injected plugin schema"
            },
            "version": 0.1
        },
        "authz-casdoor": {
            "schema": {
                "required": [
                    "callback_url",
                    "endpoint_addr",
                    "client_id",
                    "client_secret"
                ],
                "type": "object",
                "encrypt_fields": [
                    "client_secret"
                ],
                "properties": {
                    "endpoint_addr": {
                        "pattern": "^[^%?]+[^/]$",
                        "type": "string"
                    },
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    },
                    "callback_url": {
                        "pattern": "^[^%?]+[^/]$",
                        "type": "string"
                    },
                    "client_id": {
                        "type": "string"
                    },
                    "client_secret": {
                        "type": "string"
                    }
                },
                "$comment": "this is a mark for our injected plugin schema"
            },
            "version": 0.1,
            "priority": 2559
        },
        "proxy-rewrite": {
            "schema": {
                "minProperties": 1,
                "type": "object",
                "properties": {
                    "uri": {
                        "maxLength": 4096,
                        "type": "string",
                        "pattern": "^\/.*",
                        "description": "new uri for upstream",
                        "minLength": 1
                    },
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    },
                    "host": {
                        "pattern": "^[0-9a-zA-Z-.]+(:\\d{1,5})?$",
                        "type": "string",
                        "description": "new host for upstream"
                    },
                    "use_real_request_uri_unsafe": {
                        "type": "boolean",
                        "default": false,
                        "description": "use real_request_uri instead, THIS IS VERY UNSAFE."
                    },
                    "headers": {
                        "oneOf": [
                            {
                                "type": "object",
                                "minProperties": 1,
                                "properties": {
                                    "remove": {
                                        "minItems": 1,
                                        "type": "array",
                                        "items": {
                                            "pattern": "^[^:]+$",
                                            "type": "string"
                                        }
                                    },
                                    "add": {
                                        "patternProperties": {
                                            "^[^:]+$": {
                                                "oneOf": [
                                                    {
                                                        "type": "string"
                                                    },
                                                    {
                                                        "type": "number"
                                                    }
                                                ]
                                            }
                                        },
                                        "minProperties": 1,
                                        "type": "object"
                                    },
                                    "set": {
                                        "patternProperties": {
                                            "^[^:]+$": {
                                                "oneOf": [
                                                    {
                                                        "type": "string"
                                                    },
                                                    {
                                                        "type": "number"
                                                    }
                                                ]
                                            }
                                        },
                                        "minProperties": 1,
                                        "type": "object"
                                    }
                                },
                                "additionalProperties": false
                            },
                            {
                                "patternProperties": {
                                    "^[^:]+$": {
                                        "oneOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "number"
                                            }
                                        ]
                                    }
                                },
                                "minProperties": 1,
                                "type": "object"
                            }
                        ],
                        "description": "new headers for request"
                    },
                    "method": {
                        "type": "string",
                        "enum": [
                            "UNLOCK",
                            "PATCH",
                            "TRACE",
                            "GET",
                            "HEAD",
                            "POST",
                            "PUT",
                            "DELETE",
                            "MKCOL",
                            "COPY",
                            "MOVE",
                            "OPTIONS",
                            "PROPFIND",
                            "LOCK"
                        ],
                        "description": "proxy route method"
                    },
                    "regex_uri": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "regex uri"
                        },
                        "minItems": 2,
                        "description": "new uri that substitute from client uri for upstream, lower priority than uri property",
                        "maxItems": 2
                    }
                },
                "$comment": "this is a mark for our injected plugin schema"
            },
            "version": 0.1,
            "priority": 1008
        },
        "cas-auth": {
            "schema": {
                "required": [
                    "idp_uri",
                    "cas_callback_uri",
                    "logout_uri"
                ],
                "type": "object",
                "properties": {
                    "idp_uri": {
                        "type": "string"
                    },
                    "cas_callback_uri": {
                        "type": "string"
                    },
                    "logout_uri": {
                        "type": "string"
                    },
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    }
                },
                "$comment": "this is a mark for our injected plugin schema"
            },
            "version": 0.1,
            "priority": 2597
        },
        "public-api": {
            "schema": {
                "type": "object",
                "properties": {
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    },
                    "uri": {
                        "type": "string"
                    }
                },
                "$comment": "this is a mark for our injected plugin schema"
            },
            "version": 0.1,
            "priority": 501
        },
        "fault-injection": {
            "schema": {
                "minProperties": 1,
                "type": "object",
                "properties": {
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    },
                    "abort": {
                        "required": [
                            "http_status"
                        ],
                        "type": "object",
                        "properties": {
                            "percentage": {
                                "maximum": 100,
                                "type": "integer",
                                "minimum": 0
                            },
                            "vars": {
                                "type": "array",
                                "maxItems": 20,
                                "items": {
                                    "type": "array"
                                }
                            },
                            "http_status": {
                                "minimum": 200,
                                "type": "integer"
                            },
                            "body": {
                                "minLength": 0,
                                "type": "string"
                            }
                        }
                    },
                    "delay": {
                        "required": [
                            "duration"
                        ],
                        "type": "object",
                        "properties": {
                            "duration": {
                                "minimum": 0,
                                "type": "number"
                            },
                            "vars": {
                                "type": "array",
                                "maxItems": 20,
                                "items": {
                                    "type": "array"
                                }
                            },
                            "percentage": {
                                "maximum": 100,
                                "type": "integer",
                                "minimum": 0
                            }
                        }
                    }
                },
                "$comment": "this is a mark for our injected plugin schema"
            },
            "version": 0.1,
            "priority": 11000
        },
        "udp-logger": {
            "version": 0.1,
            "schema": {
                "required": [
                    "host",
                    "port"
                ],
                "type": "object",
                "properties": {
                    "log_format": {
                        "type": "object"
                    },
                    "timeout": {
                        "type": "integer",
                        "default": 3,
                        "minimum": 1
                    },
                    "max_retry_count": {
                        "type": "integer",
                        "default": 0,
                        "minimum": 0
                    },
                    "retry_delay": {
                        "type": "integer",
                        "default": 1,
                        "minimum": 0
                    },
                    "buffer_duration": {
                        "type": "integer",
                        "default": 60,
                        "minimum": 1
                    },
                    "port": {
                        "minimum": 0,
                        "type": "integer"
                    },
                    "include_req_body": {
                        "default": false,
                        "type": "boolean"
                    },
                    "host": {
                        "type": "string"
                    },
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    },
                    "batch_max_size": {
                        "type": "integer",
                        "default": 1000,
                        "minimum": 1
                    },
                    "inactive_timeout": {
                        "type": "integer",
                        "default": 5,
                        "minimum": 1
                    },
                    "name": {
                        "default": "udp logger",
                        "type": "string"
                    }
                },
                "$comment": "this is a mark for our injected plugin schema"
            },
            "metadata_schema": {
                "properties": {
                    "log_format": {
                        "default": {
                            "@timestamp": "$time_iso8601",
                            "client_ip": "$remote_addr",
                            "host": "$host"
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "priority": 400
        },
        "body-transformer": {
            "schema": {
                "$comment": "this is a mark for our injected plugin schema",
                "type": "object",
                "properties": {
                    "request": {
                        "required": [
                            "template"
                        ],
                        "type": "object",
                        "properties": {
                            "template": {
                                "type": "string"
                            },
                            "input_format": {
                                "enum": [
                                    "xml",
                                    "json"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    },
                    "response": {
                        "required": [
                            "template"
                        ],
                        "type": "object",
                        "properties": {
                            "template": {
                                "type": "string"
                            },
                            "input_format": {
                                "enum": [
                                    "xml",
                                    "json"
                                ],
                                "type": "string"
                            }
                        }
                    }
                },
                "anyOf": [
                    {
                        "required": [
                            "request"
                        ]
                    },
                    {
                        "required": [
                            "response"
                        ]
                    },
                    {
                        "required": [
                            "request",
                            "response"
                        ]
                    }
                ]
            },
            "priority": 1080,
            "version": 0.1
        },
        "ai": {
            "version": 0.1,
            "schema": {
                "properties": {
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    }
                },
                "$comment": "this is a mark for our injected plugin schema"
            },
            "priority": 22900,
            "scope": "global"
        },
        "example-plugin": {
            "priority": 0,
            "schema": {
                "required": [
                    "i"
                ],
                "type": "object",
                "properties": {
                    "s": {
                        "type": "string"
                    },
                    "port": {
                        "type": "integer"
                    },
                    "t": {
                        "minItems": 1,
                        "type": "array"
                    },
                    "i": {
                        "minimum": 0,
                        "type": "number"
                    },
                    "ip": {
                        "type": "string"
                    },
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    }
                },
                "$comment": "this is a mark for our injected plugin schema"
            },
            "metadata_schema": {
                "required": [
                    "ikey",
                    "skey"
                ],
                "type": "object",
                "properties": {
                    "ikey": {
                        "minimum": 0,
                        "type": "number"
                    },
                    "skey": {
                        "type": "string"
                    }
                }
            },
            "version": 0.1
        },
        "openwhisk": {
            "schema": {
                "required": [
                    "api_host",
                    "service_token",
                    "namespace",
                    "action"
                ],
                "type": "object",
                "properties": {
                    "timeout": {
                        "type": "integer",
                        "default": 3000,
                        "minimum": 1,
                        "maximum": 60000,
                        "description": "timeout in milliseconds"
                    },
                    "result": {
                        "default": true,
                        "type": "boolean"
                    },
                    "api_host": {
                        "type": "string"
                    },
                    "namespace": {
                        "maxLength": 256,
                        "type": "string",
                        "pattern": "\\A([\\w]|[\\w][\\w@ .-]*[\\w@.-]+)\\z"
                    },
                    "keepalive_pool": {
                        "type": "integer",
                        "default": 5,
                        "minimum": 1
                    },
                    "package": {
                        "maxLength": 256,
                        "type": "string",
                        "pattern": "\\A([\\w]|[\\w][\\w@ .-]*[\\w@.-]+)\\z"
                    },
                    "service_token": {
                        "type": "string"
                    },
                    "keepalive_timeout": {
                        "type": "integer",
                        "default": 60000,
                        "minimum": 1000
                    },
                    "ssl_verify": {
                        "default": true,
                        "type": "boolean"
                    },
                    "action": {
                        "maxLength": 256,
                        "type": "string",
                        "pattern": "\\A([\\w]|[\\w][\\w@ .-]*[\\w@.-]+)\\z"
                    },
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    },
                    "keepalive": {
                        "default": true,
                        "type": "boolean"
                    }
                },
                "$comment": "this is a mark for our injected plugin schema"
            },
            "version": 0.1,
            "priority": -1901
        },
        "cors": {
            "priority": 4000,
            "schema": {
                "type": "object",
                "properties": {
                    "allow_credential": {
                        "type": "boolean",
                        "default": false,
                        "description": "allow client append credential. according to CORS specification,if you set this option to 'true', you can not use '*' for other options."
                    },
                    "allow_origins": {
                        "pattern": "^(\\*|\\*\\*|null|\\w+://[^,]+(,\\w+://[^,]+)*)$",
                        "type": "string",
                        "default": "*",
                        "description": "you can use '*' to allow all origins when no credentials,'**' to allow forcefully(it will bring some security risks, be carefully),multiple origin use ',' to split. default: *."
                    },
                    "allow_origins_by_regex": {
                        "type": "array",
                        "items": {
                            "maxLength": 4096,
                            "type": "string",
                            "minLength": 1
                        },
                        "minItems": 1,
                        "description": "you can use regex to allow specific origins when no credentials,for example use [.*\\.test.com] to allow a.test.com and b.test.com",
                        "uniqueItems": true
                    },
                    "allow_methods": {
                        "type": "string",
                        "default": "*",
                        "description": "you can use '*' to allow all methods when no credentials,'**' to allow forcefully(it will bring some security risks, be carefully),multiple method use ',' to split. default: *."
                    },
                    "allow_origins_by_metadata": {
                        "type": "array",
                        "items": {
                            "maxLength": 4096,
                            "type": "string",
                            "minLength": 1
                        },
                        "minItems": 1,
                        "description": "set allowed origins by referencing origins in plugin metadata",
                        "uniqueItems": true
                    },
                    "allow_headers": {
                        "type": "string",
                        "default": "*",
                        "description": "you can use '*' to allow all header when no credentials,'**' to allow forcefully(it will bring some security risks, be carefully),multiple header use ',' to split. default: *."
                    },
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    },
                    "expose_headers": {
                        "type": "string",
                        "default": "*",
                        "description": "you can use '*' to expose all header when no credentials,'**' to allow forcefully(it will bring some security risks, be carefully),multiple header use ',' to split. default: *."
                    },
                    "max_age": {
                        "type": "integer",
                        "default": 5,
                        "description": "maximum number of seconds the results can be cached.-1 means no cached, the max value is depend on browser,more details plz check MDN. default: 5."
                    }
                },
                "$comment": "this is a mark for our injected plugin schema"
            },
            "metadata_schema": {
                "properties": {
                    "allow_origins": {
                        "additionalProperties": {
                            "pattern": "^(\\*|\\*\\*|null|\\w+://[^,]+(,\\w+://[^,]+)*)$",
                            "type": "string"
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "version": 0.1
        },
        "clickhouse-logger": {
            "priority": 398,
            "schema": {
                "type": "object",
                "$comment": "this is a mark for our injected plugin schema",
                "encrypt_fields": [
                    "password"
                ],
                "properties": {
                    "endpoint_addr": {
                        "pattern": "^[^\/]+:\/\/([\\da-zA-Z.-]+|\\[[\\da-fA-F:]+\\])(:\\d+)?",
                        "type": "string"
                    },
                    "timeout": {
                        "type": "integer",
                        "default": 3,
                        "minimum": 1
                    },
                    "password": {
                        "default": "",
                        "type": "string"
                    },
                    "endpoint_addrs": {
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "pattern": "^[^\/]+:\/\/([\\da-zA-Z.-]+|\\[[\\da-fA-F:]+\\])(:\\d+)?",
                            "type": "string"
                        }
                    },
                    "database": {
                        "default": "",
                        "type": "string"
                    },
                    "include_req_body": {
                        "default": false,
                        "type": "boolean"
                    },
                    "include_req_body_expr": {
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "type": "array"
                        }
                    },
                    "name": {
                        "default": "clickhouse-logger",
                        "type": "string"
                    },
                    "user": {
                        "default": "",
                        "type": "string"
                    },
                    "max_retry_count": {
                        "type": "integer",
                        "default": 0,
                        "minimum": 0
                    },
                    "retry_delay": {
                        "type": "integer",
                        "default": 1,
                        "minimum": 0
                    },
                    "buffer_duration": {
                        "type": "integer",
                        "default": 60,
                        "minimum": 1
                    },
                    "log_format": {
                        "type": "object"
                    },
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    },
                    "include_resp_body_expr": {
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "type": "array"
                        }
                    },
                    "ssl_verify": {
                        "default": true,
                        "type": "boolean"
                    },
                    "logtable": {
                        "default": "",
                        "type": "string"
                    },
                    "include_resp_body": {
                        "default": false,
                        "type": "boolean"
                    },
                    "inactive_timeout": {
                        "type": "integer",
                        "default": 5,
                        "minimum": 1
                    },
                    "batch_max_size": {
                        "type": "integer",
                        "default": 1000,
                        "minimum": 1
                    }
                },
                "oneOf": [
                    {
                        "required": [
                            "endpoint_addr",
                            "user",
                            "password",
                            "database",
                            "logtable"
                        ]
                    },
                    {
                        "required": [
                            "endpoint_addrs",
                            "user",
                            "password",
                            "database",
                            "logtable"
                        ]
                    }
                ]
            },
            "metadata_schema": {
                "properties": {
                    "log_format": {
                        "default": {
                            "@timestamp": "$time_iso8601",
                            "client_ip": "$remote_addr",
                            "host": "$host"
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "version": 0.1
        },
        "proxy-mirror": {
            "schema": {
                "required": [
                    "host"
                ],
                "type": "object",
                "properties": {
                    "path": {
                        "pattern": "^/[^?&]+$",
                        "type": "string"
                    },
                    "sample_ratio": {
                        "maximum": 1,
                        "type": "number",
                        "default": 1,
                        "minimum": 1e-05
                    },
                    "host": {
                        "pattern": "^http(s)?:\/\/([\\da-zA-Z.-]+|\\[[\\da-fA-F:]+\\])(:\\d+)?$",
                        "type": "string"
                    },
                    "path_concat_mode": {
                        "description": "the concatenation mode for custom path",
                        "type": "string",
                        "default": "replace",
                        "enum": [
                            "replace",
                            "prefix"
                        ]
                    },
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    }
                },
                "$comment": "this is a mark for our injected plugin schema"
            },
            "version": 0.1,
            "priority": 1010
        },
        "authz-casbin": {
            "version": 0.1,
            "schema": {
                "$comment": "this is a mark for our injected plugin schema",
                "type": "object",
                "properties": {
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    },
                    "policy": {
                        "type": "string"
                    },
                    "model_path": {
                        "type": "string"
                    },
                    "policy_path": {
                        "type": "string"
                    },
                    "model": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "oneOf": [
                    {
                        "required": [
                            "model_path",
                            "policy_path",
                            "username"
                        ]
                    },
                    {
                        "required": [
                            "model",
                            "policy",
                            "username"
                        ]
                    }
                ]
            },
            "metadata_schema": {
                "required": [
                    "model",
                    "policy"
                ],
                "type": "object",
                "properties": {
                    "model": {
                        "type": "string"
                    },
                    "policy": {
                        "type": "string"
                    }
                }
            },
            "priority": 2560
        },
        "google-cloud-logging": {
            "version": 0.1,
            "schema": {
                "type": "object",
                "$comment": "this is a mark for our injected plugin schema",
                "encrypt_fields": [
                    "auth_config.private_key"
                ],
                "properties": {
                    "log_format": {
                        "type": "object"
                    },
                    "max_retry_count": {
                        "type": "integer",
                        "default": 0,
                        "minimum": 0
                    },
                    "auth_file": {
                        "type": "string"
                    },
                    "resource": {
                        "required": [
                            "type"
                        ],
                        "type": "object",
                        "properties": {
                            "labels": {
                                "type": "object"
                            },
                            "type": {
                                "type": "string"
                            }
                        },
                        "default": {
                            "type": "global"
                        }
                    },
                    "auth_config": {
                        "required": [
                            "private_key",
                            "project_id",
                            "token_uri"
                        ],
                        "type": "object",
                        "properties": {
                            "project_id": {
                                "type": "string"
                            },
                            "token_uri": {
                                "default": "https://oauth2.googleapis.com/token",
                                "type": "string"
                            },
                            "scopes": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "description": "Google OAuth2 Authorization Scopes"
                                },
                                "minItems": 1,
                                "default": [
                                    "https://www.googleapis.com/auth/logging.read",
                                    "https://www.googleapis.com/auth/logging.write",
                                    "https://www.googleapis.com/auth/logging.admin",
                                    "https://www.googleapis.com/auth/cloud-platform"
                                ],
                                "uniqueItems": true
                            },
                            "entries_uri": {
                                "default": "https://logging.googleapis.com/v2/entries:write",
                                "type": "string"
                            },
                            "private_key": {
                                "type": "string"
                            }
                        }
                    },
                    "batch_max_size": {
                        "type": "integer",
                        "default": 1000,
                        "minimum": 1
                    },
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    },
                    "log_id": {
                        "default": "apisix.apache.org%2Flogs",
                        "type": "string"
                    },
                    "ssl_verify": {
                        "default": true,
                        "type": "boolean"
                    },
                    "buffer_duration": {
                        "type": "integer",
                        "default": 60,
                        "minimum": 1
                    },
                    "retry_delay": {
                        "type": "integer",
                        "default": 1,
                        "minimum": 0
                    },
                    "inactive_timeout": {
                        "type": "integer",
                        "default": 5,
                        "minimum": 1
                    },
                    "name": {
                        "default": "google-cloud-logging",
                        "type": "string"
                    }
                },
                "oneOf": [
                    {
                        "required": [
                            "auth_config"
                        ]
                    },
                    {
                        "required": [
                            "auth_file"
                        ]
                    }
                ]
            },
            "metadata_schema": {
                "properties": {
                    "log_format": {
                        "default": {
                            "@timestamp": "$time_iso8601",
                            "client_ip": "$remote_addr",
                            "host": "$host"
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "priority": 407
        },
        "referer-restriction": {
            "schema": {
                "$comment": "this is a mark for our injected plugin schema",
                "type": "object",
                "properties": {
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    },
                    "message": {
                        "maxLength": 1024,
                        "type": "string",
                        "default": "Your referer host is not allowed",
                        "minLength": 1
                    },
                    "bypass_missing": {
                        "default": false,
                        "type": "boolean"
                    },
                    "whitelist": {
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
                            "type": "string"
                        }
                    },
                    "blacklist": {
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
                            "type": "string"
                        }
                    }
                },
                "oneOf": [
                    {
                        "required": [
                            "whitelist"
                        ]
                    },
                    {
                        "required": [
                            "blacklist"
                        ]
                    }
                ]
            },
            "version": 0.1,
            "priority": 2990
        },
        "aws-lambda": {
            "schema": {
                "required": [
                    "function_uri"
                ],
                "type": "object",
                "properties": {
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    },
                    "timeout": {
                        "type": "integer",
                        "default": 3000,
                        "minimum": 100
                    },
                    "keepalive_timeout": {
                        "type": "integer",
                        "default": 60000,
                        "minimum": 1000
                    },
                    "ssl_verify": {
                        "default": true,
                        "type": "boolean"
                    },
                    "keepalive": {
                        "default": true,
                        "type": "boolean"
                    },
                    "keepalive_pool": {
                        "type": "integer",
                        "default": 5,
                        "minimum": 1
                    },
                    "authorization": {
                        "properties": {
                            "apikey": {
                                "type": "string"
                            },
                            "iam": {
                                "required": [
                                    "accesskey",
                                    "secretkey"
                                ],
                                "type": "object",
                                "properties": {
                                    "secretkey": {
                                        "description": "secret access key from from aws iam console",
                                        "type": "string"
                                    },
                                    "service": {
                                        "type": "string",
                                        "default": "execute-api",
                                        "description": "the service that is receiving the request"
                                    },
                                    "accesskey": {
                                        "description": "access key id from from aws iam console",
                                        "type": "string"
                                    },
                                    "aws_region": {
                                        "type": "string",
                                        "default": "us-east-1",
                                        "description": "the aws region that is receiving the request"
                                    }
                                }
                            }
                        },
                        "type": "object"
                    },
                    "function_uri": {
                        "type": "string"
                    }
                },
                "$comment": "this is a mark for our injected plugin schema"
            },
            "version": 0.1,
            "priority": -1899
        },
        "serverless-pre-function": {
            "schema": {
                "required": [
                    "functions"
                ],
                "type": "object",
                "properties": {
                    "phase": {
                        "type": "string",
                        "default": "access",
                        "enum": [
                            "rewrite",
                            "access",
                            "header_filter",
                            "body_filter",
                            "log",
                            "before_proxy"
                        ]
                    },
                    "functions": {
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    }
                },
                "$comment": "this is a mark for our injected plugin schema"
            },
            "priority": 10000,
            "version": 0.1
        }
    },
    "stream_plugins": {
        "mqtt-proxy": {
            "schema": {
                "required": [
                    "protocol_name",
                    "protocol_level"
                ],
                "type": "object",
                "properties": {
                    "protocol_name": {
                        "type": "string"
                    },
                    "protocol_level": {
                        "type": "integer"
                    },
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    }
                },
                "$comment": "this is a mark for our injected plugin schema"
            },
            "version": 0.1,
            "priority": 1000
        },
        "limit-conn": {
            "schema": {
                "required": [
                    "conn",
                    "burst",
                    "default_conn_delay",
                    "key"
                ],
                "type": "object",
                "properties": {
                    "burst": {
                        "minimum": 0,
                        "type": "integer"
                    },
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    },
                    "conn": {
                        "exclusiveMinimum": 0,
                        "type": "integer"
                    },
                    "default_conn_delay": {
                        "exclusiveMinimum": 0,
                        "type": "number"
                    },
                    "only_use_default_delay": {
                        "default": false,
                        "type": "boolean"
                    },
                    "key_type": {
                        "enum": [
                            "var",
                            "var_combination"
                        ],
                        "default": "var",
                        "type": "string"
                    },
                    "key": {
                        "type": "string"
                    }
                },
                "$comment": "this is a mark for our injected plugin schema"
            },
            "version": 0.1,
            "priority": 1003
        },
        "syslog": {
            "priority": 401,
            "schema": {
                "required": [
                    "host",
                    "port"
                ],
                "type": "object",
                "properties": {
                    "log_format": {
                        "type": "object"
                    },
                    "timeout": {
                        "type": "integer",
                        "default": 3000,
                        "minimum": 1
                    },
                    "max_retry_count": {
                        "type": "integer",
                        "default": 0,
                        "minimum": 0
                    },
                    "pool_size": {
                        "type": "integer",
                        "default": 5,
                        "minimum": 5
                    },
                    "buffer_duration": {
                        "type": "integer",
                        "default": 60,
                        "minimum": 1
                    },
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    },
                    "host": {
                        "type": "string"
                    },
                    "tls": {
                        "default": false,
                        "type": "boolean"
                    },
                    "retry_delay": {
                        "type": "integer",
                        "default": 1,
                        "minimum": 0
                    },
                    "port": {
                        "type": "integer"
                    },
                    "batch_max_size": {
                        "type": "integer",
                        "default": 1000,
                        "minimum": 1
                    },
                    "flush_limit": {
                        "type": "integer",
                        "default": 4096,
                        "minimum": 1
                    },
                    "drop_limit": {
                        "default": 1048576,
                        "type": "integer"
                    },
                    "sock_type": {
                        "type": "string",
                        "default": "tcp",
                        "enum": [
                            "tcp",
                            "udp"
                        ]
                    },
                    "inactive_timeout": {
                        "type": "integer",
                        "default": 5,
                        "minimum": 1
                    },
                    "name": {
                        "default": "stream sys logger",
                        "type": "string"
                    }
                },
                "$comment": "this is a mark for our injected plugin schema"
            },
            "metadata_schema": {
                "properties": {
                    "log_format": {
                        "default": {
                            "@timestamp": "$time_iso8601",
                            "client_ip": "$remote_addr",
                            "host": "$host"
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "version": 0.1
        },
        "ip-restriction": {
            "schema": {
                "$comment": "this is a mark for our injected plugin schema",
                "type": "object",
                "properties": {
                    "_meta": {
                        "properties": {
                            "filter": {
                                "type": "array",
                                "description": "filter determines whether the plugin needs to be executed at runtime"
                            },
                            "error_response": {
                                "oneOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "object"
                                    }
                                ]
                            },
                            "disable": {
                                "type": "boolean"
                            },
                            "priority": {
                                "type": "integer",
                                "description": "priority of plugins by customized order"
                            }
                        },
                        "type": "object"
                    },
                    "blacklist": {
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "anyOf": [
                                {
                                    "format": "ipv4",
                                    "type": "string",
                                    "title": "IPv4"
                                },
                                {
                                    "pattern": "^([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])/([12]?[0-9]|3[0-2])$",
                                    "type": "string",
                                    "title": "IPv4/CIDR"
                                },
                                {
                                    "format": "ipv6",
                                    "type": "string",
                                    "title": "IPv6"
                                },
                                {
                                    "pattern": "^([a-fA-F0-9]{0,4}:){1,8}(:[a-fA-F0-9]{0,4}){0,8}([a-fA-F0-9]{0,4})?/[0-9]{1,3}$",
                                    "type": "string",
                                    "title": "IPv6/CIDR"
                                }
                            ]
                        }
                    },
                    "message": {
                        "maxLength": 1024,
                        "type": "string",
                        "default": "Your IP address is not allowed",
                        "minLength": 1
                    },
                    "whitelist": {
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "anyOf": [
                                {
                                    "format": "ipv4",
                                    "type": "string",
                                    "title": "IPv4"
                                },
                                {
                                    "pattern": "^([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])/([12]?[0-9]|3[0-2])$",
                                    "type": "string",
                                    "title": "IPv4/CIDR"
                                },
                                {
                                    "format": "ipv6",
                                    "type": "string",
                                    "title": "IPv6"
                                },
                                {
                                    "pattern": "^([a-fA-F0-9]{0,4}:){1,8}(:[a-fA-F0-9]{0,4}){0,8}([a-fA-F0-9]{0,4})?/[0-9]{1,3}$",
                                    "type": "string",
                                    "title": "IPv6/CIDR"
                                }
                            ]
                        }
                    }
                },
                "oneOf": [
                    {
                        "required": [
                            "whitelist"
                        ]
                    },
                    {
                        "required": [
                            "blacklist"
                        ]
                    }
                ]
            },
            "version": 0.1,
            "priority": 3000
        }
    }
}